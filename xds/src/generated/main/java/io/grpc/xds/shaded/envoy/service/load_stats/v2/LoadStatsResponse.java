// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/load_stats/v2/lrs.proto

package io.grpc.xds.shaded.envoy.service.load_stats.v2;

/**
 * <pre>
 * The management server sends envoy a LoadStatsResponse with all clusters it
 * is interested in learning load stats about.
 * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
 * </pre>
 *
 * Protobuf type {@code envoy.service.load_stats.v2.LoadStatsResponse}
 */
public  final class LoadStatsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.service.load_stats.v2.LoadStatsResponse)
    LoadStatsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LoadStatsResponse.newBuilder() to construct.
  private LoadStatsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LoadStatsResponse() {
    clusters_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    reportEndpointGranularity_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LoadStatsResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              clusters_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            clusters_.add(s);
            break;
          }
          case 18: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (loadReportingInterval_ != null) {
              subBuilder = loadReportingInterval_.toBuilder();
            }
            loadReportingInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(loadReportingInterval_);
              loadReportingInterval_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            reportEndpointGranularity_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        clusters_ = clusters_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grpc.xds.shaded.envoy.service.load_stats.v2.Lrs.internal_static_envoy_service_load_stats_v2_LoadStatsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grpc.xds.shaded.envoy.service.load_stats.v2.Lrs.internal_static_envoy_service_load_stats_v2_LoadStatsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.class, io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.Builder.class);
  }

  private int bitField0_;
  public static final int CLUSTERS_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList clusters_;
  /**
   * <pre>
   * Clusters to report stats for.
   * </pre>
   *
   * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.ProtocolStringList
      getClustersList() {
    return clusters_;
  }
  /**
   * <pre>
   * Clusters to report stats for.
   * </pre>
   *
   * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
   */
  public int getClustersCount() {
    return clusters_.size();
  }
  /**
   * <pre>
   * Clusters to report stats for.
   * </pre>
   *
   * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
   */
  public java.lang.String getClusters(int index) {
    return clusters_.get(index);
  }
  /**
   * <pre>
   * Clusters to report stats for.
   * </pre>
   *
   * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.ByteString
      getClustersBytes(int index) {
    return clusters_.getByteString(index);
  }

  public static final int LOAD_REPORTING_INTERVAL_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration loadReportingInterval_;
  /**
   * <pre>
   * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
   * 1. There may be some delay from when the timer fires until stats sampling occurs.
   * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
   *    that is observed in between the corresponding previous *LoadStatsRequest* and this
   *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
   *    of inobservability that might otherwise exists between the messages. New clusters are not
   *    subject to this consideration.
   * </pre>
   *
   * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
   */
  public boolean hasLoadReportingInterval() {
    return loadReportingInterval_ != null;
  }
  /**
   * <pre>
   * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
   * 1. There may be some delay from when the timer fires until stats sampling occurs.
   * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
   *    that is observed in between the corresponding previous *LoadStatsRequest* and this
   *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
   *    of inobservability that might otherwise exists between the messages. New clusters are not
   *    subject to this consideration.
   * </pre>
   *
   * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
   */
  public com.google.protobuf.Duration getLoadReportingInterval() {
    return loadReportingInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : loadReportingInterval_;
  }
  /**
   * <pre>
   * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
   * 1. There may be some delay from when the timer fires until stats sampling occurs.
   * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
   *    that is observed in between the corresponding previous *LoadStatsRequest* and this
   *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
   *    of inobservability that might otherwise exists between the messages. New clusters are not
   *    subject to this consideration.
   * </pre>
   *
   * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
   */
  public com.google.protobuf.DurationOrBuilder getLoadReportingIntervalOrBuilder() {
    return getLoadReportingInterval();
  }

  public static final int REPORT_ENDPOINT_GRANULARITY_FIELD_NUMBER = 3;
  private boolean reportEndpointGranularity_;
  /**
   * <pre>
   * Set to *true* if the management server supports endpoint granularity
   * report.
   * </pre>
   *
   * <code>bool report_endpoint_granularity = 3;</code>
   */
  public boolean getReportEndpointGranularity() {
    return reportEndpointGranularity_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < clusters_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusters_.getRaw(i));
    }
    if (loadReportingInterval_ != null) {
      output.writeMessage(2, getLoadReportingInterval());
    }
    if (reportEndpointGranularity_ != false) {
      output.writeBool(3, reportEndpointGranularity_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < clusters_.size(); i++) {
        dataSize += computeStringSizeNoTag(clusters_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getClustersList().size();
    }
    if (loadReportingInterval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLoadReportingInterval());
    }
    if (reportEndpointGranularity_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, reportEndpointGranularity_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse)) {
      return super.equals(obj);
    }
    io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse other = (io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse) obj;

    boolean result = true;
    result = result && getClustersList()
        .equals(other.getClustersList());
    result = result && (hasLoadReportingInterval() == other.hasLoadReportingInterval());
    if (hasLoadReportingInterval()) {
      result = result && getLoadReportingInterval()
          .equals(other.getLoadReportingInterval());
    }
    result = result && (getReportEndpointGranularity()
        == other.getReportEndpointGranularity());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getClustersCount() > 0) {
      hash = (37 * hash) + CLUSTERS_FIELD_NUMBER;
      hash = (53 * hash) + getClustersList().hashCode();
    }
    if (hasLoadReportingInterval()) {
      hash = (37 * hash) + LOAD_REPORTING_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getLoadReportingInterval().hashCode();
    }
    hash = (37 * hash) + REPORT_ENDPOINT_GRANULARITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReportEndpointGranularity());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The management server sends envoy a LoadStatsResponse with all clusters it
   * is interested in learning load stats about.
   * [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
   * </pre>
   *
   * Protobuf type {@code envoy.service.load_stats.v2.LoadStatsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.service.load_stats.v2.LoadStatsResponse)
      io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grpc.xds.shaded.envoy.service.load_stats.v2.Lrs.internal_static_envoy_service_load_stats_v2_LoadStatsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grpc.xds.shaded.envoy.service.load_stats.v2.Lrs.internal_static_envoy_service_load_stats_v2_LoadStatsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.class, io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.Builder.class);
    }

    // Construct using io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      clusters_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (loadReportingIntervalBuilder_ == null) {
        loadReportingInterval_ = null;
      } else {
        loadReportingInterval_ = null;
        loadReportingIntervalBuilder_ = null;
      }
      reportEndpointGranularity_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grpc.xds.shaded.envoy.service.load_stats.v2.Lrs.internal_static_envoy_service_load_stats_v2_LoadStatsResponse_descriptor;
    }

    @java.lang.Override
    public io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse getDefaultInstanceForType() {
      return io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse build() {
      io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse buildPartial() {
      io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse result = new io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        clusters_ = clusters_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.clusters_ = clusters_;
      if (loadReportingIntervalBuilder_ == null) {
        result.loadReportingInterval_ = loadReportingInterval_;
      } else {
        result.loadReportingInterval_ = loadReportingIntervalBuilder_.build();
      }
      result.reportEndpointGranularity_ = reportEndpointGranularity_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse) {
        return mergeFrom((io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse other) {
      if (other == io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse.getDefaultInstance()) return this;
      if (!other.clusters_.isEmpty()) {
        if (clusters_.isEmpty()) {
          clusters_ = other.clusters_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureClustersIsMutable();
          clusters_.addAll(other.clusters_);
        }
        onChanged();
      }
      if (other.hasLoadReportingInterval()) {
        mergeLoadReportingInterval(other.getLoadReportingInterval());
      }
      if (other.getReportEndpointGranularity() != false) {
        setReportEndpointGranularity(other.getReportEndpointGranularity());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList clusters_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureClustersIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        clusters_ = new com.google.protobuf.LazyStringArrayList(clusters_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.ProtocolStringList
        getClustersList() {
      return clusters_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public int getClustersCount() {
      return clusters_.size();
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public java.lang.String getClusters(int index) {
      return clusters_.get(index);
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getClustersBytes(int index) {
      return clusters_.getByteString(index);
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setClusters(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureClustersIsMutable();
      clusters_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addClusters(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureClustersIsMutable();
      clusters_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addAllClusters(
        java.lang.Iterable<java.lang.String> values) {
      ensureClustersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, clusters_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearClusters() {
      clusters_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Clusters to report stats for.
     * </pre>
     *
     * <code>repeated string clusters = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addClustersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureClustersIsMutable();
      clusters_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration loadReportingInterval_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> loadReportingIntervalBuilder_;
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public boolean hasLoadReportingInterval() {
      return loadReportingIntervalBuilder_ != null || loadReportingInterval_ != null;
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public com.google.protobuf.Duration getLoadReportingInterval() {
      if (loadReportingIntervalBuilder_ == null) {
        return loadReportingInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : loadReportingInterval_;
      } else {
        return loadReportingIntervalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public Builder setLoadReportingInterval(com.google.protobuf.Duration value) {
      if (loadReportingIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        loadReportingInterval_ = value;
        onChanged();
      } else {
        loadReportingIntervalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public Builder setLoadReportingInterval(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (loadReportingIntervalBuilder_ == null) {
        loadReportingInterval_ = builderForValue.build();
        onChanged();
      } else {
        loadReportingIntervalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public Builder mergeLoadReportingInterval(com.google.protobuf.Duration value) {
      if (loadReportingIntervalBuilder_ == null) {
        if (loadReportingInterval_ != null) {
          loadReportingInterval_ =
            com.google.protobuf.Duration.newBuilder(loadReportingInterval_).mergeFrom(value).buildPartial();
        } else {
          loadReportingInterval_ = value;
        }
        onChanged();
      } else {
        loadReportingIntervalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public Builder clearLoadReportingInterval() {
      if (loadReportingIntervalBuilder_ == null) {
        loadReportingInterval_ = null;
        onChanged();
      } else {
        loadReportingInterval_ = null;
        loadReportingIntervalBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public com.google.protobuf.Duration.Builder getLoadReportingIntervalBuilder() {
      
      onChanged();
      return getLoadReportingIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    public com.google.protobuf.DurationOrBuilder getLoadReportingIntervalOrBuilder() {
      if (loadReportingIntervalBuilder_ != null) {
        return loadReportingIntervalBuilder_.getMessageOrBuilder();
      } else {
        return loadReportingInterval_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : loadReportingInterval_;
      }
    }
    /**
     * <pre>
     * The minimum interval of time to collect stats over. This is only a minimum for two reasons:
     * 1. There may be some delay from when the timer fires until stats sampling occurs.
     * 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
     *    that is observed in between the corresponding previous *LoadStatsRequest* and this
     *    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
     *    of inobservability that might otherwise exists between the messages. New clusters are not
     *    subject to this consideration.
     * </pre>
     *
     * <code>.google.protobuf.Duration load_reporting_interval = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getLoadReportingIntervalFieldBuilder() {
      if (loadReportingIntervalBuilder_ == null) {
        loadReportingIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getLoadReportingInterval(),
                getParentForChildren(),
                isClean());
        loadReportingInterval_ = null;
      }
      return loadReportingIntervalBuilder_;
    }

    private boolean reportEndpointGranularity_ ;
    /**
     * <pre>
     * Set to *true* if the management server supports endpoint granularity
     * report.
     * </pre>
     *
     * <code>bool report_endpoint_granularity = 3;</code>
     */
    public boolean getReportEndpointGranularity() {
      return reportEndpointGranularity_;
    }
    /**
     * <pre>
     * Set to *true* if the management server supports endpoint granularity
     * report.
     * </pre>
     *
     * <code>bool report_endpoint_granularity = 3;</code>
     */
    public Builder setReportEndpointGranularity(boolean value) {
      
      reportEndpointGranularity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set to *true* if the management server supports endpoint granularity
     * report.
     * </pre>
     *
     * <code>bool report_endpoint_granularity = 3;</code>
     */
    public Builder clearReportEndpointGranularity() {
      
      reportEndpointGranularity_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.service.load_stats.v2.LoadStatsResponse)
  }

  // @@protoc_insertion_point(class_scope:envoy.service.load_stats.v2.LoadStatsResponse)
  private static final io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse();
  }

  public static io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LoadStatsResponse>
      PARSER = new com.google.protobuf.AbstractParser<LoadStatsResponse>() {
    @java.lang.Override
    public LoadStatsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LoadStatsResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LoadStatsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LoadStatsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.grpc.xds.shaded.envoy.service.load_stats.v2.LoadStatsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

