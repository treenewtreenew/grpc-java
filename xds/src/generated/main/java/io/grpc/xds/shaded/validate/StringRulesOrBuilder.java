// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validate/validate.proto

package io.grpc.xds.shaded.validate;

public interface StringRulesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:validate.StringRules)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional string const = 1;</code>
   */
  boolean hasConst();
  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional string const = 1;</code>
   */
  java.lang.String getConst();
  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional string const = 1;</code>
   */
  com.google.protobuf.ByteString
      getConstBytes();

  /**
   * <pre>
   * MinLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a minimum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 min_len = 2;</code>
   */
  boolean hasMinLen();
  /**
   * <pre>
   * MinLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a minimum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 min_len = 2;</code>
   */
  long getMinLen();

  /**
   * <pre>
   * MaxLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a maximum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 max_len = 3;</code>
   */
  boolean hasMaxLen();
  /**
   * <pre>
   * MaxLen specifies that this field must be the specified number of
   * characters (Unicode code points) at a maximum. Note that the number of
   * characters may differ from the number of bytes in the string.
   * </pre>
   *
   * <code>optional uint64 max_len = 3;</code>
   */
  long getMaxLen();

  /**
   * <pre>
   * MinBytes specifies that this field must be the specified number of bytes
   * at a minimum
   * </pre>
   *
   * <code>optional uint64 min_bytes = 4;</code>
   */
  boolean hasMinBytes();
  /**
   * <pre>
   * MinBytes specifies that this field must be the specified number of bytes
   * at a minimum
   * </pre>
   *
   * <code>optional uint64 min_bytes = 4;</code>
   */
  long getMinBytes();

  /**
   * <pre>
   * MaxBytes specifies that this field must be the specified number of bytes
   * at a maximum
   * </pre>
   *
   * <code>optional uint64 max_bytes = 5;</code>
   */
  boolean hasMaxBytes();
  /**
   * <pre>
   * MaxBytes specifies that this field must be the specified number of bytes
   * at a maximum
   * </pre>
   *
   * <code>optional uint64 max_bytes = 5;</code>
   */
  long getMaxBytes();

  /**
   * <pre>
   * Pattern specifes that this field must match against the specified
   * regular expression (RE2 syntax). The included expression should elide
   * any delimiters.
   * </pre>
   *
   * <code>optional string pattern = 6;</code>
   */
  boolean hasPattern();
  /**
   * <pre>
   * Pattern specifes that this field must match against the specified
   * regular expression (RE2 syntax). The included expression should elide
   * any delimiters.
   * </pre>
   *
   * <code>optional string pattern = 6;</code>
   */
  java.lang.String getPattern();
  /**
   * <pre>
   * Pattern specifes that this field must match against the specified
   * regular expression (RE2 syntax). The included expression should elide
   * any delimiters.
   * </pre>
   *
   * <code>optional string pattern = 6;</code>
   */
  com.google.protobuf.ByteString
      getPatternBytes();

  /**
   * <pre>
   * Prefix specifies that this field must have the specified substring at
   * the beginning of the string.
   * </pre>
   *
   * <code>optional string prefix = 7;</code>
   */
  boolean hasPrefix();
  /**
   * <pre>
   * Prefix specifies that this field must have the specified substring at
   * the beginning of the string.
   * </pre>
   *
   * <code>optional string prefix = 7;</code>
   */
  java.lang.String getPrefix();
  /**
   * <pre>
   * Prefix specifies that this field must have the specified substring at
   * the beginning of the string.
   * </pre>
   *
   * <code>optional string prefix = 7;</code>
   */
  com.google.protobuf.ByteString
      getPrefixBytes();

  /**
   * <pre>
   * Suffix specifies that this field must have the specified substring at
   * the end of the string.
   * </pre>
   *
   * <code>optional string suffix = 8;</code>
   */
  boolean hasSuffix();
  /**
   * <pre>
   * Suffix specifies that this field must have the specified substring at
   * the end of the string.
   * </pre>
   *
   * <code>optional string suffix = 8;</code>
   */
  java.lang.String getSuffix();
  /**
   * <pre>
   * Suffix specifies that this field must have the specified substring at
   * the end of the string.
   * </pre>
   *
   * <code>optional string suffix = 8;</code>
   */
  com.google.protobuf.ByteString
      getSuffixBytes();

  /**
   * <pre>
   * Contains specifies that this field must have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string contains = 9;</code>
   */
  boolean hasContains();
  /**
   * <pre>
   * Contains specifies that this field must have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string contains = 9;</code>
   */
  java.lang.String getContains();
  /**
   * <pre>
   * Contains specifies that this field must have the specified substring
   * anywhere in the string.
   * </pre>
   *
   * <code>optional string contains = 9;</code>
   */
  com.google.protobuf.ByteString
      getContainsBytes();

  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10;</code>
   */
  java.util.List<java.lang.String>
      getInList();
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10;</code>
   */
  int getInCount();
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10;</code>
   */
  java.lang.String getIn(int index);
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string in = 10;</code>
   */
  com.google.protobuf.ByteString
      getInBytes(int index);

  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11;</code>
   */
  java.util.List<java.lang.String>
      getNotInList();
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11;</code>
   */
  int getNotInCount();
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11;</code>
   */
  java.lang.String getNotIn(int index);
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated string not_in = 11;</code>
   */
  com.google.protobuf.ByteString
      getNotInBytes(int index);

  /**
   * <pre>
   * Email specifies that the field must be a valid email address as
   * defined by RFC 5322
   * </pre>
   *
   * <code>optional bool email = 12;</code>
   */
  boolean hasEmail();
  /**
   * <pre>
   * Email specifies that the field must be a valid email address as
   * defined by RFC 5322
   * </pre>
   *
   * <code>optional bool email = 12;</code>
   */
  boolean getEmail();

  /**
   * <pre>
   * Hostname specifies that the field must be a valid hostname as
   * defined by RFC 1034. This constraint does not support
   * internationalized domain names (IDNs).
   * </pre>
   *
   * <code>optional bool hostname = 13;</code>
   */
  boolean hasHostname();
  /**
   * <pre>
   * Hostname specifies that the field must be a valid hostname as
   * defined by RFC 1034. This constraint does not support
   * internationalized domain names (IDNs).
   * </pre>
   *
   * <code>optional bool hostname = 13;</code>
   */
  boolean getHostname();

  /**
   * <pre>
   * Ip specifies that the field must be a valid IP (v4 or v6) address.
   * Valid IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>optional bool ip = 14;</code>
   */
  boolean hasIp();
  /**
   * <pre>
   * Ip specifies that the field must be a valid IP (v4 or v6) address.
   * Valid IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>optional bool ip = 14;</code>
   */
  boolean getIp();

  /**
   * <pre>
   * Ipv4 specifies that the field must be a valid IPv4 address.
   * </pre>
   *
   * <code>optional bool ipv4 = 15;</code>
   */
  boolean hasIpv4();
  /**
   * <pre>
   * Ipv4 specifies that the field must be a valid IPv4 address.
   * </pre>
   *
   * <code>optional bool ipv4 = 15;</code>
   */
  boolean getIpv4();

  /**
   * <pre>
   * Ipv6 specifies that the field must be a valid IPv6 address. Valid
   * IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>optional bool ipv6 = 16;</code>
   */
  boolean hasIpv6();
  /**
   * <pre>
   * Ipv6 specifies that the field must be a valid IPv6 address. Valid
   * IPv6 addresses should not include surrounding square brackets.
   * </pre>
   *
   * <code>optional bool ipv6 = 16;</code>
   */
  boolean getIpv6();

  /**
   * <pre>
   * Uri specifies that the field must be a valid, absolute URI as defined
   * by RFC 3986
   * </pre>
   *
   * <code>optional bool uri = 17;</code>
   */
  boolean hasUri();
  /**
   * <pre>
   * Uri specifies that the field must be a valid, absolute URI as defined
   * by RFC 3986
   * </pre>
   *
   * <code>optional bool uri = 17;</code>
   */
  boolean getUri();

  /**
   * <pre>
   * UriRef specifies that the field must be a valid URI as defined by RFC
   * 3986 and may be relative or absolute.
   * </pre>
   *
   * <code>optional bool uri_ref = 18;</code>
   */
  boolean hasUriRef();
  /**
   * <pre>
   * UriRef specifies that the field must be a valid URI as defined by RFC
   * 3986 and may be relative or absolute.
   * </pre>
   *
   * <code>optional bool uri_ref = 18;</code>
   */
  boolean getUriRef();

  public io.grpc.xds.shaded.validate.StringRules.WellKnownCase getWellKnownCase();
}
