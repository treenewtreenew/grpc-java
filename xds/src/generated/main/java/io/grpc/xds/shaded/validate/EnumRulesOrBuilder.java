// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validate/validate.proto

package io.grpc.xds.shaded.validate;

public interface EnumRulesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:validate.EnumRules)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional int32 const = 1;</code>
   */
  boolean hasConst();
  /**
   * <pre>
   * Const specifies that this field must be exactly the specified value
   * </pre>
   *
   * <code>optional int32 const = 1;</code>
   */
  int getConst();

  /**
   * <pre>
   * DefinedOnly specifies that this field must be only one of the defined
   * values for this enum, failing on any undefined value.
   * </pre>
   *
   * <code>optional bool defined_only = 2;</code>
   */
  boolean hasDefinedOnly();
  /**
   * <pre>
   * DefinedOnly specifies that this field must be only one of the defined
   * values for this enum, failing on any undefined value.
   * </pre>
   *
   * <code>optional bool defined_only = 2;</code>
   */
  boolean getDefinedOnly();

  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated int32 in = 3;</code>
   */
  java.util.List<java.lang.Integer> getInList();
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated int32 in = 3;</code>
   */
  int getInCount();
  /**
   * <pre>
   * In specifies that this field must be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated int32 in = 3;</code>
   */
  int getIn(int index);

  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated int32 not_in = 4;</code>
   */
  java.util.List<java.lang.Integer> getNotInList();
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated int32 not_in = 4;</code>
   */
  int getNotInCount();
  /**
   * <pre>
   * NotIn specifies that this field cannot be equal to one of the specified
   * values
   * </pre>
   *
   * <code>repeated int32 not_in = 4;</code>
   */
  int getNotIn(int index);
}
