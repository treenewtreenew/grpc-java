// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/protocol.proto

package io.grpc.xds.shaded.envoy.api.v2.core;

/**
 * Protobuf type {@code envoy.api.v2.core.Http2ProtocolOptions}
 */
public  final class Http2ProtocolOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.api.v2.core.Http2ProtocolOptions)
    Http2ProtocolOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Http2ProtocolOptions.newBuilder() to construct.
  private Http2ProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Http2ProtocolOptions() {
    allowConnect_ = false;
    allowMetadata_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Http2ProtocolOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (hpackTableSize_ != null) {
              subBuilder = hpackTableSize_.toBuilder();
            }
            hpackTableSize_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hpackTableSize_);
              hpackTableSize_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxConcurrentStreams_ != null) {
              subBuilder = maxConcurrentStreams_.toBuilder();
            }
            maxConcurrentStreams_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxConcurrentStreams_);
              maxConcurrentStreams_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (initialStreamWindowSize_ != null) {
              subBuilder = initialStreamWindowSize_.toBuilder();
            }
            initialStreamWindowSize_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(initialStreamWindowSize_);
              initialStreamWindowSize_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (initialConnectionWindowSize_ != null) {
              subBuilder = initialConnectionWindowSize_.toBuilder();
            }
            initialConnectionWindowSize_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(initialConnectionWindowSize_);
              initialConnectionWindowSize_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            allowConnect_ = input.readBool();
            break;
          }
          case 48: {

            allowMetadata_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grpc.xds.shaded.envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grpc.xds.shaded.envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.class, io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.Builder.class);
  }

  public static final int HPACK_TABLE_SIZE_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt32Value hpackTableSize_;
  /**
   * <pre>
   * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
   * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
   * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
   * compression.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
   */
  public boolean hasHpackTableSize() {
    return hpackTableSize_ != null;
  }
  /**
   * <pre>
   * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
   * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
   * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
   * compression.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
   */
  public com.google.protobuf.UInt32Value getHpackTableSize() {
    return hpackTableSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : hpackTableSize_;
  }
  /**
   * <pre>
   * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
   * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
   * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
   * compression.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getHpackTableSizeOrBuilder() {
    return getHpackTableSize();
  }

  public static final int MAX_CONCURRENT_STREAMS_FIELD_NUMBER = 2;
  private com.google.protobuf.UInt32Value maxConcurrentStreams_;
  /**
   * <pre>
   * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
   * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
   * and defaults to 2147483647.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
   */
  public boolean hasMaxConcurrentStreams() {
    return maxConcurrentStreams_ != null;
  }
  /**
   * <pre>
   * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
   * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
   * and defaults to 2147483647.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getMaxConcurrentStreams() {
    return maxConcurrentStreams_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrentStreams_;
  }
  /**
   * <pre>
   * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
   * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
   * and defaults to 2147483647.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrentStreamsOrBuilder() {
    return getMaxConcurrentStreams();
  }

  public static final int INITIAL_STREAM_WINDOW_SIZE_FIELD_NUMBER = 3;
  private com.google.protobuf.UInt32Value initialStreamWindowSize_;
  /**
   * <pre>
   * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
   * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
   * stop the flow of data to the codec buffers.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
   */
  public boolean hasInitialStreamWindowSize() {
    return initialStreamWindowSize_ != null;
  }
  /**
   * <pre>
   * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
   * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
   * stop the flow of data to the codec buffers.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getInitialStreamWindowSize() {
    return initialStreamWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialStreamWindowSize_;
  }
  /**
   * <pre>
   * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
   * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
   * stop the flow of data to the codec buffers.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getInitialStreamWindowSizeOrBuilder() {
    return getInitialStreamWindowSize();
  }

  public static final int INITIAL_CONNECTION_WINDOW_SIZE_FIELD_NUMBER = 4;
  private com.google.protobuf.UInt32Value initialConnectionWindowSize_;
  /**
   * <pre>
   * Similar to *initial_stream_window_size*, but for connection-level flow-control
   * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
   */
  public boolean hasInitialConnectionWindowSize() {
    return initialConnectionWindowSize_ != null;
  }
  /**
   * <pre>
   * Similar to *initial_stream_window_size*, but for connection-level flow-control
   * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getInitialConnectionWindowSize() {
    return initialConnectionWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialConnectionWindowSize_;
  }
  /**
   * <pre>
   * Similar to *initial_stream_window_size*, but for connection-level flow-control
   * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getInitialConnectionWindowSizeOrBuilder() {
    return getInitialConnectionWindowSize();
  }

  public static final int ALLOW_CONNECT_FIELD_NUMBER = 5;
  private boolean allowConnect_;
  /**
   * <pre>
   * Allows proxying Websocket and other upgrades over H2 connect.
   * </pre>
   *
   * <code>bool allow_connect = 5;</code>
   */
  public boolean getAllowConnect() {
    return allowConnect_;
  }

  public static final int ALLOW_METADATA_FIELD_NUMBER = 6;
  private boolean allowMetadata_;
  /**
   * <pre>
   * [#not-implemented-hide:] Hiding until envoy has full metadata support.
   * Still under implementation. DO NOT USE.
   * Allows metadata. See [metadata
   * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
   * information.
   * </pre>
   *
   * <code>bool allow_metadata = 6;</code>
   */
  public boolean getAllowMetadata() {
    return allowMetadata_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hpackTableSize_ != null) {
      output.writeMessage(1, getHpackTableSize());
    }
    if (maxConcurrentStreams_ != null) {
      output.writeMessage(2, getMaxConcurrentStreams());
    }
    if (initialStreamWindowSize_ != null) {
      output.writeMessage(3, getInitialStreamWindowSize());
    }
    if (initialConnectionWindowSize_ != null) {
      output.writeMessage(4, getInitialConnectionWindowSize());
    }
    if (allowConnect_ != false) {
      output.writeBool(5, allowConnect_);
    }
    if (allowMetadata_ != false) {
      output.writeBool(6, allowMetadata_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hpackTableSize_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHpackTableSize());
    }
    if (maxConcurrentStreams_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMaxConcurrentStreams());
    }
    if (initialStreamWindowSize_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getInitialStreamWindowSize());
    }
    if (initialConnectionWindowSize_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getInitialConnectionWindowSize());
    }
    if (allowConnect_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, allowConnect_);
    }
    if (allowMetadata_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, allowMetadata_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions)) {
      return super.equals(obj);
    }
    io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions other = (io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions) obj;

    boolean result = true;
    result = result && (hasHpackTableSize() == other.hasHpackTableSize());
    if (hasHpackTableSize()) {
      result = result && getHpackTableSize()
          .equals(other.getHpackTableSize());
    }
    result = result && (hasMaxConcurrentStreams() == other.hasMaxConcurrentStreams());
    if (hasMaxConcurrentStreams()) {
      result = result && getMaxConcurrentStreams()
          .equals(other.getMaxConcurrentStreams());
    }
    result = result && (hasInitialStreamWindowSize() == other.hasInitialStreamWindowSize());
    if (hasInitialStreamWindowSize()) {
      result = result && getInitialStreamWindowSize()
          .equals(other.getInitialStreamWindowSize());
    }
    result = result && (hasInitialConnectionWindowSize() == other.hasInitialConnectionWindowSize());
    if (hasInitialConnectionWindowSize()) {
      result = result && getInitialConnectionWindowSize()
          .equals(other.getInitialConnectionWindowSize());
    }
    result = result && (getAllowConnect()
        == other.getAllowConnect());
    result = result && (getAllowMetadata()
        == other.getAllowMetadata());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHpackTableSize()) {
      hash = (37 * hash) + HPACK_TABLE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getHpackTableSize().hashCode();
    }
    if (hasMaxConcurrentStreams()) {
      hash = (37 * hash) + MAX_CONCURRENT_STREAMS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxConcurrentStreams().hashCode();
    }
    if (hasInitialStreamWindowSize()) {
      hash = (37 * hash) + INITIAL_STREAM_WINDOW_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getInitialStreamWindowSize().hashCode();
    }
    if (hasInitialConnectionWindowSize()) {
      hash = (37 * hash) + INITIAL_CONNECTION_WINDOW_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getInitialConnectionWindowSize().hashCode();
    }
    hash = (37 * hash) + ALLOW_CONNECT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowConnect());
    hash = (37 * hash) + ALLOW_METADATA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowMetadata());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.api.v2.core.Http2ProtocolOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.Http2ProtocolOptions)
      io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grpc.xds.shaded.envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grpc.xds.shaded.envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.class, io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.Builder.class);
    }

    // Construct using io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (hpackTableSizeBuilder_ == null) {
        hpackTableSize_ = null;
      } else {
        hpackTableSize_ = null;
        hpackTableSizeBuilder_ = null;
      }
      if (maxConcurrentStreamsBuilder_ == null) {
        maxConcurrentStreams_ = null;
      } else {
        maxConcurrentStreams_ = null;
        maxConcurrentStreamsBuilder_ = null;
      }
      if (initialStreamWindowSizeBuilder_ == null) {
        initialStreamWindowSize_ = null;
      } else {
        initialStreamWindowSize_ = null;
        initialStreamWindowSizeBuilder_ = null;
      }
      if (initialConnectionWindowSizeBuilder_ == null) {
        initialConnectionWindowSize_ = null;
      } else {
        initialConnectionWindowSize_ = null;
        initialConnectionWindowSizeBuilder_ = null;
      }
      allowConnect_ = false;

      allowMetadata_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grpc.xds.shaded.envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
    }

    public io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions getDefaultInstanceForType() {
      return io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.getDefaultInstance();
    }

    public io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions build() {
      io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions buildPartial() {
      io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions result = new io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions(this);
      if (hpackTableSizeBuilder_ == null) {
        result.hpackTableSize_ = hpackTableSize_;
      } else {
        result.hpackTableSize_ = hpackTableSizeBuilder_.build();
      }
      if (maxConcurrentStreamsBuilder_ == null) {
        result.maxConcurrentStreams_ = maxConcurrentStreams_;
      } else {
        result.maxConcurrentStreams_ = maxConcurrentStreamsBuilder_.build();
      }
      if (initialStreamWindowSizeBuilder_ == null) {
        result.initialStreamWindowSize_ = initialStreamWindowSize_;
      } else {
        result.initialStreamWindowSize_ = initialStreamWindowSizeBuilder_.build();
      }
      if (initialConnectionWindowSizeBuilder_ == null) {
        result.initialConnectionWindowSize_ = initialConnectionWindowSize_;
      } else {
        result.initialConnectionWindowSize_ = initialConnectionWindowSizeBuilder_.build();
      }
      result.allowConnect_ = allowConnect_;
      result.allowMetadata_ = allowMetadata_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions) {
        return mergeFrom((io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions other) {
      if (other == io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions.getDefaultInstance()) return this;
      if (other.hasHpackTableSize()) {
        mergeHpackTableSize(other.getHpackTableSize());
      }
      if (other.hasMaxConcurrentStreams()) {
        mergeMaxConcurrentStreams(other.getMaxConcurrentStreams());
      }
      if (other.hasInitialStreamWindowSize()) {
        mergeInitialStreamWindowSize(other.getInitialStreamWindowSize());
      }
      if (other.hasInitialConnectionWindowSize()) {
        mergeInitialConnectionWindowSize(other.getInitialConnectionWindowSize());
      }
      if (other.getAllowConnect() != false) {
        setAllowConnect(other.getAllowConnect());
      }
      if (other.getAllowMetadata() != false) {
        setAllowMetadata(other.getAllowMetadata());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.UInt32Value hpackTableSize_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> hpackTableSizeBuilder_;
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public boolean hasHpackTableSize() {
      return hpackTableSizeBuilder_ != null || hpackTableSize_ != null;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public com.google.protobuf.UInt32Value getHpackTableSize() {
      if (hpackTableSizeBuilder_ == null) {
        return hpackTableSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : hpackTableSize_;
      } else {
        return hpackTableSizeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public Builder setHpackTableSize(com.google.protobuf.UInt32Value value) {
      if (hpackTableSizeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hpackTableSize_ = value;
        onChanged();
      } else {
        hpackTableSizeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public Builder setHpackTableSize(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (hpackTableSizeBuilder_ == null) {
        hpackTableSize_ = builderForValue.build();
        onChanged();
      } else {
        hpackTableSizeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public Builder mergeHpackTableSize(com.google.protobuf.UInt32Value value) {
      if (hpackTableSizeBuilder_ == null) {
        if (hpackTableSize_ != null) {
          hpackTableSize_ =
            com.google.protobuf.UInt32Value.newBuilder(hpackTableSize_).mergeFrom(value).buildPartial();
        } else {
          hpackTableSize_ = value;
        }
        onChanged();
      } else {
        hpackTableSizeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public Builder clearHpackTableSize() {
      if (hpackTableSizeBuilder_ == null) {
        hpackTableSize_ = null;
        onChanged();
      } else {
        hpackTableSize_ = null;
        hpackTableSizeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getHpackTableSizeBuilder() {
      
      onChanged();
      return getHpackTableSizeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getHpackTableSizeOrBuilder() {
      if (hpackTableSizeBuilder_ != null) {
        return hpackTableSizeBuilder_.getMessageOrBuilder();
      } else {
        return hpackTableSize_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : hpackTableSize_;
      }
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getHpackTableSizeFieldBuilder() {
      if (hpackTableSizeBuilder_ == null) {
        hpackTableSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getHpackTableSize(),
                getParentForChildren(),
                isClean());
        hpackTableSize_ = null;
      }
      return hpackTableSizeBuilder_;
    }

    private com.google.protobuf.UInt32Value maxConcurrentStreams_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxConcurrentStreamsBuilder_;
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public boolean hasMaxConcurrentStreams() {
      return maxConcurrentStreamsBuilder_ != null || maxConcurrentStreams_ != null;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getMaxConcurrentStreams() {
      if (maxConcurrentStreamsBuilder_ == null) {
        return maxConcurrentStreams_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrentStreams_;
      } else {
        return maxConcurrentStreamsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxConcurrentStreams(com.google.protobuf.UInt32Value value) {
      if (maxConcurrentStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxConcurrentStreams_ = value;
        onChanged();
      } else {
        maxConcurrentStreamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxConcurrentStreams(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxConcurrentStreamsBuilder_ == null) {
        maxConcurrentStreams_ = builderForValue.build();
        onChanged();
      } else {
        maxConcurrentStreamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMaxConcurrentStreams(com.google.protobuf.UInt32Value value) {
      if (maxConcurrentStreamsBuilder_ == null) {
        if (maxConcurrentStreams_ != null) {
          maxConcurrentStreams_ =
            com.google.protobuf.UInt32Value.newBuilder(maxConcurrentStreams_).mergeFrom(value).buildPartial();
        } else {
          maxConcurrentStreams_ = value;
        }
        onChanged();
      } else {
        maxConcurrentStreamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMaxConcurrentStreams() {
      if (maxConcurrentStreamsBuilder_ == null) {
        maxConcurrentStreams_ = null;
        onChanged();
      } else {
        maxConcurrentStreams_ = null;
        maxConcurrentStreamsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxConcurrentStreamsBuilder() {
      
      onChanged();
      return getMaxConcurrentStreamsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrentStreamsOrBuilder() {
      if (maxConcurrentStreamsBuilder_ != null) {
        return maxConcurrentStreamsBuilder_.getMessageOrBuilder();
      } else {
        return maxConcurrentStreams_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrentStreams_;
      }
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxConcurrentStreamsFieldBuilder() {
      if (maxConcurrentStreamsBuilder_ == null) {
        maxConcurrentStreamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxConcurrentStreams(),
                getParentForChildren(),
                isClean());
        maxConcurrentStreams_ = null;
      }
      return maxConcurrentStreamsBuilder_;
    }

    private com.google.protobuf.UInt32Value initialStreamWindowSize_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> initialStreamWindowSizeBuilder_;
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public boolean hasInitialStreamWindowSize() {
      return initialStreamWindowSizeBuilder_ != null || initialStreamWindowSize_ != null;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getInitialStreamWindowSize() {
      if (initialStreamWindowSizeBuilder_ == null) {
        return initialStreamWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialStreamWindowSize_;
      } else {
        return initialStreamWindowSizeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setInitialStreamWindowSize(com.google.protobuf.UInt32Value value) {
      if (initialStreamWindowSizeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        initialStreamWindowSize_ = value;
        onChanged();
      } else {
        initialStreamWindowSizeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setInitialStreamWindowSize(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (initialStreamWindowSizeBuilder_ == null) {
        initialStreamWindowSize_ = builderForValue.build();
        onChanged();
      } else {
        initialStreamWindowSizeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeInitialStreamWindowSize(com.google.protobuf.UInt32Value value) {
      if (initialStreamWindowSizeBuilder_ == null) {
        if (initialStreamWindowSize_ != null) {
          initialStreamWindowSize_ =
            com.google.protobuf.UInt32Value.newBuilder(initialStreamWindowSize_).mergeFrom(value).buildPartial();
        } else {
          initialStreamWindowSize_ = value;
        }
        onChanged();
      } else {
        initialStreamWindowSizeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearInitialStreamWindowSize() {
      if (initialStreamWindowSizeBuilder_ == null) {
        initialStreamWindowSize_ = null;
        onChanged();
      } else {
        initialStreamWindowSize_ = null;
        initialStreamWindowSizeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getInitialStreamWindowSizeBuilder() {
      
      onChanged();
      return getInitialStreamWindowSizeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getInitialStreamWindowSizeOrBuilder() {
      if (initialStreamWindowSizeBuilder_ != null) {
        return initialStreamWindowSizeBuilder_.getMessageOrBuilder();
      } else {
        return initialStreamWindowSize_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : initialStreamWindowSize_;
      }
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getInitialStreamWindowSizeFieldBuilder() {
      if (initialStreamWindowSizeBuilder_ == null) {
        initialStreamWindowSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getInitialStreamWindowSize(),
                getParentForChildren(),
                isClean());
        initialStreamWindowSize_ = null;
      }
      return initialStreamWindowSizeBuilder_;
    }

    private com.google.protobuf.UInt32Value initialConnectionWindowSize_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> initialConnectionWindowSizeBuilder_;
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public boolean hasInitialConnectionWindowSize() {
      return initialConnectionWindowSizeBuilder_ != null || initialConnectionWindowSize_ != null;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getInitialConnectionWindowSize() {
      if (initialConnectionWindowSizeBuilder_ == null) {
        return initialConnectionWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialConnectionWindowSize_;
      } else {
        return initialConnectionWindowSizeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder setInitialConnectionWindowSize(com.google.protobuf.UInt32Value value) {
      if (initialConnectionWindowSizeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        initialConnectionWindowSize_ = value;
        onChanged();
      } else {
        initialConnectionWindowSizeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder setInitialConnectionWindowSize(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (initialConnectionWindowSizeBuilder_ == null) {
        initialConnectionWindowSize_ = builderForValue.build();
        onChanged();
      } else {
        initialConnectionWindowSizeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeInitialConnectionWindowSize(com.google.protobuf.UInt32Value value) {
      if (initialConnectionWindowSizeBuilder_ == null) {
        if (initialConnectionWindowSize_ != null) {
          initialConnectionWindowSize_ =
            com.google.protobuf.UInt32Value.newBuilder(initialConnectionWindowSize_).mergeFrom(value).buildPartial();
        } else {
          initialConnectionWindowSize_ = value;
        }
        onChanged();
      } else {
        initialConnectionWindowSizeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder clearInitialConnectionWindowSize() {
      if (initialConnectionWindowSizeBuilder_ == null) {
        initialConnectionWindowSize_ = null;
        onChanged();
      } else {
        initialConnectionWindowSize_ = null;
        initialConnectionWindowSizeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getInitialConnectionWindowSizeBuilder() {
      
      onChanged();
      return getInitialConnectionWindowSizeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getInitialConnectionWindowSizeOrBuilder() {
      if (initialConnectionWindowSizeBuilder_ != null) {
        return initialConnectionWindowSizeBuilder_.getMessageOrBuilder();
      } else {
        return initialConnectionWindowSize_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : initialConnectionWindowSize_;
      }
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getInitialConnectionWindowSizeFieldBuilder() {
      if (initialConnectionWindowSizeBuilder_ == null) {
        initialConnectionWindowSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getInitialConnectionWindowSize(),
                getParentForChildren(),
                isClean());
        initialConnectionWindowSize_ = null;
      }
      return initialConnectionWindowSizeBuilder_;
    }

    private boolean allowConnect_ ;
    /**
     * <pre>
     * Allows proxying Websocket and other upgrades over H2 connect.
     * </pre>
     *
     * <code>bool allow_connect = 5;</code>
     */
    public boolean getAllowConnect() {
      return allowConnect_;
    }
    /**
     * <pre>
     * Allows proxying Websocket and other upgrades over H2 connect.
     * </pre>
     *
     * <code>bool allow_connect = 5;</code>
     */
    public Builder setAllowConnect(boolean value) {
      
      allowConnect_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Allows proxying Websocket and other upgrades over H2 connect.
     * </pre>
     *
     * <code>bool allow_connect = 5;</code>
     */
    public Builder clearAllowConnect() {
      
      allowConnect_ = false;
      onChanged();
      return this;
    }

    private boolean allowMetadata_ ;
    /**
     * <pre>
     * [#not-implemented-hide:] Hiding until envoy has full metadata support.
     * Still under implementation. DO NOT USE.
     * Allows metadata. See [metadata
     * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
     * information.
     * </pre>
     *
     * <code>bool allow_metadata = 6;</code>
     */
    public boolean getAllowMetadata() {
      return allowMetadata_;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] Hiding until envoy has full metadata support.
     * Still under implementation. DO NOT USE.
     * Allows metadata. See [metadata
     * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
     * information.
     * </pre>
     *
     * <code>bool allow_metadata = 6;</code>
     */
    public Builder setAllowMetadata(boolean value) {
      
      allowMetadata_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] Hiding until envoy has full metadata support.
     * Still under implementation. DO NOT USE.
     * Allows metadata. See [metadata
     * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
     * information.
     * </pre>
     *
     * <code>bool allow_metadata = 6;</code>
     */
    public Builder clearAllowMetadata() {
      
      allowMetadata_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.Http2ProtocolOptions)
  }

  // @@protoc_insertion_point(class_scope:envoy.api.v2.core.Http2ProtocolOptions)
  private static final io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions();
  }

  public static io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Http2ProtocolOptions>
      PARSER = new com.google.protobuf.AbstractParser<Http2ProtocolOptions>() {
    public Http2ProtocolOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Http2ProtocolOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Http2ProtocolOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Http2ProtocolOptions> getParserForType() {
    return PARSER;
  }

  public io.grpc.xds.shaded.envoy.api.v2.core.Http2ProtocolOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

