// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/base.proto

package io.envoyproxy.envoy.api.v2.core;

public interface NodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.Node)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An opaque node identifier for the Envoy node. This also provides the local
   * service node name. It should be set if any of the following features are
   * used: :ref:`statsd &lt;arch_overview_statistics&gt;`, :ref:`CDS
   * &lt;config_cluster_manager_cds&gt;`, and :ref:`HTTP tracing
   * &lt;arch_overview_tracing&gt;`, either in this message or via
   * :option:`--service-node`.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  java.lang.String getId();
  /**
   * <pre>
   * An opaque node identifier for the Envoy node. This also provides the local
   * service node name. It should be set if any of the following features are
   * used: :ref:`statsd &lt;arch_overview_statistics&gt;`, :ref:`CDS
   * &lt;config_cluster_manager_cds&gt;`, and :ref:`HTTP tracing
   * &lt;arch_overview_tracing&gt;`, either in this message or via
   * :option:`--service-node`.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Defines the local service cluster name where Envoy is running. Though
   * optional, it should be set if any of the following features are used:
   * :ref:`statsd &lt;arch_overview_statistics&gt;`, :ref:`health check cluster
   * verification &lt;envoy_api_field_core.HealthCheck.HttpHealthCheck.service_name&gt;`,
   * :ref:`runtime override directory &lt;envoy_api_msg_config.bootstrap.v2.Runtime&gt;`,
   * :ref:`user agent addition
   * &lt;envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.add_user_agent&gt;`,
   * :ref:`HTTP global rate limiting &lt;config_http_filters_rate_limit&gt;`,
   * :ref:`CDS &lt;config_cluster_manager_cds&gt;`, and :ref:`HTTP tracing
   * &lt;arch_overview_tracing&gt;`, either in this message or via
   * :option:`--service-cluster`.
   * </pre>
   *
   * <code>string cluster = 2;</code>
   */
  java.lang.String getCluster();
  /**
   * <pre>
   * Defines the local service cluster name where Envoy is running. Though
   * optional, it should be set if any of the following features are used:
   * :ref:`statsd &lt;arch_overview_statistics&gt;`, :ref:`health check cluster
   * verification &lt;envoy_api_field_core.HealthCheck.HttpHealthCheck.service_name&gt;`,
   * :ref:`runtime override directory &lt;envoy_api_msg_config.bootstrap.v2.Runtime&gt;`,
   * :ref:`user agent addition
   * &lt;envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.add_user_agent&gt;`,
   * :ref:`HTTP global rate limiting &lt;config_http_filters_rate_limit&gt;`,
   * :ref:`CDS &lt;config_cluster_manager_cds&gt;`, and :ref:`HTTP tracing
   * &lt;arch_overview_tracing&gt;`, either in this message or via
   * :option:`--service-cluster`.
   * </pre>
   *
   * <code>string cluster = 2;</code>
   */
  com.google.protobuf.ByteString
      getClusterBytes();

  /**
   * <pre>
   * Opaque metadata extending the node identifier. Envoy will pass this
   * directly to the management server.
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 3;</code>
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Opaque metadata extending the node identifier. Envoy will pass this
   * directly to the management server.
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 3;</code>
   */
  com.google.protobuf.Struct getMetadata();
  /**
   * <pre>
   * Opaque metadata extending the node identifier. Envoy will pass this
   * directly to the management server.
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 3;</code>
   */
  com.google.protobuf.StructOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * Locality specifying where the Envoy instance is running.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Locality locality = 4;</code>
   */
  boolean hasLocality();
  /**
   * <pre>
   * Locality specifying where the Envoy instance is running.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Locality locality = 4;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Locality getLocality();
  /**
   * <pre>
   * Locality specifying where the Envoy instance is running.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Locality locality = 4;</code>
   */
  io.envoyproxy.envoy.api.v2.core.LocalityOrBuilder getLocalityOrBuilder();

  /**
   * <pre>
   * This is motivated by informing a management server during canary which
   * version of Envoy is being tested in a heterogeneous fleet. This will be set
   * by Envoy in management server RPCs.
   * </pre>
   *
   * <code>string build_version = 5;</code>
   */
  java.lang.String getBuildVersion();
  /**
   * <pre>
   * This is motivated by informing a management server during canary which
   * version of Envoy is being tested in a heterogeneous fleet. This will be set
   * by Envoy in management server RPCs.
   * </pre>
   *
   * <code>string build_version = 5;</code>
   */
  com.google.protobuf.ByteString
      getBuildVersionBytes();
}
