// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/cluster/outlier_detection.proto

package io.envoyproxy.envoy.api.v2.cluster;

/**
 * <pre>
 * See the :ref:`architecture overview &lt;arch_overview_outlier_detection&gt;` for
 * more information on outlier detection.
 * </pre>
 *
 * Protobuf type {@code envoy.api.v2.cluster.OutlierDetection}
 */
public  final class OutlierDetection extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.api.v2.cluster.OutlierDetection)
    OutlierDetectionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OutlierDetection.newBuilder() to construct.
  private OutlierDetection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OutlierDetection() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OutlierDetection(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (consecutive5Xx_ != null) {
              subBuilder = consecutive5Xx_.toBuilder();
            }
            consecutive5Xx_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(consecutive5Xx_);
              consecutive5Xx_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (interval_ != null) {
              subBuilder = interval_.toBuilder();
            }
            interval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(interval_);
              interval_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (baseEjectionTime_ != null) {
              subBuilder = baseEjectionTime_.toBuilder();
            }
            baseEjectionTime_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(baseEjectionTime_);
              baseEjectionTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxEjectionPercent_ != null) {
              subBuilder = maxEjectionPercent_.toBuilder();
            }
            maxEjectionPercent_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxEjectionPercent_);
              maxEjectionPercent_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingConsecutive5Xx_ != null) {
              subBuilder = enforcingConsecutive5Xx_.toBuilder();
            }
            enforcingConsecutive5Xx_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingConsecutive5Xx_);
              enforcingConsecutive5Xx_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingSuccessRate_ != null) {
              subBuilder = enforcingSuccessRate_.toBuilder();
            }
            enforcingSuccessRate_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingSuccessRate_);
              enforcingSuccessRate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (successRateMinimumHosts_ != null) {
              subBuilder = successRateMinimumHosts_.toBuilder();
            }
            successRateMinimumHosts_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(successRateMinimumHosts_);
              successRateMinimumHosts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (successRateRequestVolume_ != null) {
              subBuilder = successRateRequestVolume_.toBuilder();
            }
            successRateRequestVolume_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(successRateRequestVolume_);
              successRateRequestVolume_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (successRateStdevFactor_ != null) {
              subBuilder = successRateStdevFactor_.toBuilder();
            }
            successRateStdevFactor_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(successRateStdevFactor_);
              successRateStdevFactor_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (consecutiveGatewayFailure_ != null) {
              subBuilder = consecutiveGatewayFailure_.toBuilder();
            }
            consecutiveGatewayFailure_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(consecutiveGatewayFailure_);
              consecutiveGatewayFailure_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingConsecutiveGatewayFailure_ != null) {
              subBuilder = enforcingConsecutiveGatewayFailure_.toBuilder();
            }
            enforcingConsecutiveGatewayFailure_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingConsecutiveGatewayFailure_);
              enforcingConsecutiveGatewayFailure_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionProto.internal_static_envoy_api_v2_cluster_OutlierDetection_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionProto.internal_static_envoy_api_v2_cluster_OutlierDetection_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.class, io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.Builder.class);
  }

  public static final int CONSECUTIVE_5XX_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt32Value consecutive5Xx_;
  /**
   * <pre>
   * The number of consecutive 5xx responses before a consecutive 5xx ejection
   * occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
   */
  public boolean hasConsecutive5Xx() {
    return consecutive5Xx_ != null;
  }
  /**
   * <pre>
   * The number of consecutive 5xx responses before a consecutive 5xx ejection
   * occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
   */
  public com.google.protobuf.UInt32Value getConsecutive5Xx() {
    return consecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5Xx_;
  }
  /**
   * <pre>
   * The number of consecutive 5xx responses before a consecutive 5xx ejection
   * occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxOrBuilder() {
    return getConsecutive5Xx();
  }

  public static final int INTERVAL_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration interval_;
  /**
   * <pre>
   * The time interval between ejection analysis sweeps. This can result in
   * both new ejections as well as hosts being returned to service. Defaults
   * to 10000ms or 10s.
   * </pre>
   *
   * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
   */
  public boolean hasInterval() {
    return interval_ != null;
  }
  /**
   * <pre>
   * The time interval between ejection analysis sweeps. This can result in
   * both new ejections as well as hosts being returned to service. Defaults
   * to 10000ms or 10s.
   * </pre>
   *
   * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.Duration getInterval() {
    return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
  }
  /**
   * <pre>
   * The time interval between ejection analysis sweeps. This can result in
   * both new ejections as well as hosts being returned to service. Defaults
   * to 10000ms or 10s.
   * </pre>
   *
   * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
    return getInterval();
  }

  public static final int BASE_EJECTION_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration baseEjectionTime_;
  /**
   * <pre>
   * The base time that a host is ejected for. The real time is equal to the
   * base time multiplied by the number of times the host has been ejected.
   * Defaults to 30000ms or 30s.
   * </pre>
   *
   * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
   */
  public boolean hasBaseEjectionTime() {
    return baseEjectionTime_ != null;
  }
  /**
   * <pre>
   * The base time that a host is ejected for. The real time is equal to the
   * base time multiplied by the number of times the host has been ejected.
   * Defaults to 30000ms or 30s.
   * </pre>
   *
   * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.Duration getBaseEjectionTime() {
    return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
  }
  /**
   * <pre>
   * The base time that a host is ejected for. The real time is equal to the
   * base time multiplied by the number of times the host has been ejected.
   * Defaults to 30000ms or 30s.
   * </pre>
   *
   * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder() {
    return getBaseEjectionTime();
  }

  public static final int MAX_EJECTION_PERCENT_FIELD_NUMBER = 4;
  private com.google.protobuf.UInt32Value maxEjectionPercent_;
  /**
   * <pre>
   * The maximum % of an upstream cluster that can be ejected due to outlier
   * detection. Defaults to 10% but will eject at least one host regardless of the value.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
   */
  public boolean hasMaxEjectionPercent() {
    return maxEjectionPercent_ != null;
  }
  /**
   * <pre>
   * The maximum % of an upstream cluster that can be ejected due to outlier
   * detection. Defaults to 10% but will eject at least one host regardless of the value.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getMaxEjectionPercent() {
    return maxEjectionPercent_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxEjectionPercent_;
  }
  /**
   * <pre>
   * The maximum % of an upstream cluster that can be ejected due to outlier
   * detection. Defaults to 10% but will eject at least one host regardless of the value.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getMaxEjectionPercentOrBuilder() {
    return getMaxEjectionPercent();
  }

  public static final int ENFORCING_CONSECUTIVE_5XX_FIELD_NUMBER = 5;
  private com.google.protobuf.UInt32Value enforcingConsecutive5Xx_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive 5xx. This setting can be used to disable
   * ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
   */
  public boolean hasEnforcingConsecutive5Xx() {
    return enforcingConsecutive5Xx_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive 5xx. This setting can be used to disable
   * ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getEnforcingConsecutive5Xx() {
    return enforcingConsecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutive5Xx_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive 5xx. This setting can be used to disable
   * ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutive5XxOrBuilder() {
    return getEnforcingConsecutive5Xx();
  }

  public static final int ENFORCING_SUCCESS_RATE_FIELD_NUMBER = 6;
  private com.google.protobuf.UInt32Value enforcingSuccessRate_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics. This setting can be used to
   * disable ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
   */
  public boolean hasEnforcingSuccessRate() {
    return enforcingSuccessRate_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics. This setting can be used to
   * disable ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getEnforcingSuccessRate() {
    return enforcingSuccessRate_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingSuccessRate_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics. This setting can be used to
   * disable ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingSuccessRateOrBuilder() {
    return getEnforcingSuccessRate();
  }

  public static final int SUCCESS_RATE_MINIMUM_HOSTS_FIELD_NUMBER = 7;
  private com.google.protobuf.UInt32Value successRateMinimumHosts_;
  /**
   * <pre>
   * The number of hosts in a cluster that must have enough request volume to
   * detect success rate outliers. If the number of hosts is less than this
   * setting, outlier detection via success rate statistics is not performed
   * for any host in the cluster. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
   */
  public boolean hasSuccessRateMinimumHosts() {
    return successRateMinimumHosts_ != null;
  }
  /**
   * <pre>
   * The number of hosts in a cluster that must have enough request volume to
   * detect success rate outliers. If the number of hosts is less than this
   * setting, outlier detection via success rate statistics is not performed
   * for any host in the cluster. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
   */
  public com.google.protobuf.UInt32Value getSuccessRateMinimumHosts() {
    return successRateMinimumHosts_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateMinimumHosts_;
  }
  /**
   * <pre>
   * The number of hosts in a cluster that must have enough request volume to
   * detect success rate outliers. If the number of hosts is less than this
   * setting, outlier detection via success rate statistics is not performed
   * for any host in the cluster. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateMinimumHostsOrBuilder() {
    return getSuccessRateMinimumHosts();
  }

  public static final int SUCCESS_RATE_REQUEST_VOLUME_FIELD_NUMBER = 8;
  private com.google.protobuf.UInt32Value successRateRequestVolume_;
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one
   * interval (as defined by the interval duration above) to include this host
   * in success rate based outlier detection. If the volume is lower than this
   * setting, outlier detection via success rate statistics is not performed
   * for that host. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
   */
  public boolean hasSuccessRateRequestVolume() {
    return successRateRequestVolume_ != null;
  }
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one
   * interval (as defined by the interval duration above) to include this host
   * in success rate based outlier detection. If the volume is lower than this
   * setting, outlier detection via success rate statistics is not performed
   * for that host. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
   */
  public com.google.protobuf.UInt32Value getSuccessRateRequestVolume() {
    return successRateRequestVolume_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateRequestVolume_;
  }
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one
   * interval (as defined by the interval duration above) to include this host
   * in success rate based outlier detection. If the volume is lower than this
   * setting, outlier detection via success rate statistics is not performed
   * for that host. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateRequestVolumeOrBuilder() {
    return getSuccessRateRequestVolume();
  }

  public static final int SUCCESS_RATE_STDEV_FACTOR_FIELD_NUMBER = 9;
  private com.google.protobuf.UInt32Value successRateStdevFactor_;
  /**
   * <pre>
   * This factor is used to determine the ejection threshold for success rate
   * outlier ejection. The ejection threshold is the difference between the
   * mean success rate, and the product of this factor and the standard
   * deviation of the mean success rate: mean - (stdev *
   * success_rate_stdev_factor). This factor is divided by a thousand to get a
   * double. That is, if the desired factor is 1.9, the runtime value should
   * be 1900. Defaults to 1900.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
   */
  public boolean hasSuccessRateStdevFactor() {
    return successRateStdevFactor_ != null;
  }
  /**
   * <pre>
   * This factor is used to determine the ejection threshold for success rate
   * outlier ejection. The ejection threshold is the difference between the
   * mean success rate, and the product of this factor and the standard
   * deviation of the mean success rate: mean - (stdev *
   * success_rate_stdev_factor). This factor is divided by a thousand to get a
   * double. That is, if the desired factor is 1.9, the runtime value should
   * be 1900. Defaults to 1900.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
   */
  public com.google.protobuf.UInt32Value getSuccessRateStdevFactor() {
    return successRateStdevFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateStdevFactor_;
  }
  /**
   * <pre>
   * This factor is used to determine the ejection threshold for success rate
   * outlier ejection. The ejection threshold is the difference between the
   * mean success rate, and the product of this factor and the standard
   * deviation of the mean success rate: mean - (stdev *
   * success_rate_stdev_factor). This factor is divided by a thousand to get a
   * double. That is, if the desired factor is 1.9, the runtime value should
   * be 1900. Defaults to 1900.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateStdevFactorOrBuilder() {
    return getSuccessRateStdevFactor();
  }

  public static final int CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER = 10;
  private com.google.protobuf.UInt32Value consecutiveGatewayFailure_;
  /**
   * <pre>
   * The number of consecutive gateway failures (502, 503, 504 status or
   * connection errors that are mapped to one of those status codes) before a
   * consecutive gateway failure ejection occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
   */
  public boolean hasConsecutiveGatewayFailure() {
    return consecutiveGatewayFailure_ != null;
  }
  /**
   * <pre>
   * The number of consecutive gateway failures (502, 503, 504 status or
   * connection errors that are mapped to one of those status codes) before a
   * consecutive gateway failure ejection occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
   */
  public com.google.protobuf.UInt32Value getConsecutiveGatewayFailure() {
    return consecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayFailure_;
  }
  /**
   * <pre>
   * The number of consecutive gateway failures (502, 503, 504 status or
   * connection errors that are mapped to one of those status codes) before a
   * consecutive gateway failure ejection occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayFailureOrBuilder() {
    return getConsecutiveGatewayFailure();
  }

  public static final int ENFORCING_CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER = 11;
  private com.google.protobuf.UInt32Value enforcingConsecutiveGatewayFailure_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive gateway failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
   */
  public boolean hasEnforcingConsecutiveGatewayFailure() {
    return enforcingConsecutiveGatewayFailure_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive gateway failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32Value getEnforcingConsecutiveGatewayFailure() {
    return enforcingConsecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveGatewayFailure_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive gateway failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
   */
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutiveGatewayFailureOrBuilder() {
    return getEnforcingConsecutiveGatewayFailure();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (consecutive5Xx_ != null) {
      output.writeMessage(1, getConsecutive5Xx());
    }
    if (interval_ != null) {
      output.writeMessage(2, getInterval());
    }
    if (baseEjectionTime_ != null) {
      output.writeMessage(3, getBaseEjectionTime());
    }
    if (maxEjectionPercent_ != null) {
      output.writeMessage(4, getMaxEjectionPercent());
    }
    if (enforcingConsecutive5Xx_ != null) {
      output.writeMessage(5, getEnforcingConsecutive5Xx());
    }
    if (enforcingSuccessRate_ != null) {
      output.writeMessage(6, getEnforcingSuccessRate());
    }
    if (successRateMinimumHosts_ != null) {
      output.writeMessage(7, getSuccessRateMinimumHosts());
    }
    if (successRateRequestVolume_ != null) {
      output.writeMessage(8, getSuccessRateRequestVolume());
    }
    if (successRateStdevFactor_ != null) {
      output.writeMessage(9, getSuccessRateStdevFactor());
    }
    if (consecutiveGatewayFailure_ != null) {
      output.writeMessage(10, getConsecutiveGatewayFailure());
    }
    if (enforcingConsecutiveGatewayFailure_ != null) {
      output.writeMessage(11, getEnforcingConsecutiveGatewayFailure());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (consecutive5Xx_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getConsecutive5Xx());
    }
    if (interval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getInterval());
    }
    if (baseEjectionTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBaseEjectionTime());
    }
    if (maxEjectionPercent_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMaxEjectionPercent());
    }
    if (enforcingConsecutive5Xx_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getEnforcingConsecutive5Xx());
    }
    if (enforcingSuccessRate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getEnforcingSuccessRate());
    }
    if (successRateMinimumHosts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getSuccessRateMinimumHosts());
    }
    if (successRateRequestVolume_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getSuccessRateRequestVolume());
    }
    if (successRateStdevFactor_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getSuccessRateStdevFactor());
    }
    if (consecutiveGatewayFailure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getConsecutiveGatewayFailure());
    }
    if (enforcingConsecutiveGatewayFailure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getEnforcingConsecutiveGatewayFailure());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.api.v2.cluster.OutlierDetection)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.api.v2.cluster.OutlierDetection other = (io.envoyproxy.envoy.api.v2.cluster.OutlierDetection) obj;

    boolean result = true;
    result = result && (hasConsecutive5Xx() == other.hasConsecutive5Xx());
    if (hasConsecutive5Xx()) {
      result = result && getConsecutive5Xx()
          .equals(other.getConsecutive5Xx());
    }
    result = result && (hasInterval() == other.hasInterval());
    if (hasInterval()) {
      result = result && getInterval()
          .equals(other.getInterval());
    }
    result = result && (hasBaseEjectionTime() == other.hasBaseEjectionTime());
    if (hasBaseEjectionTime()) {
      result = result && getBaseEjectionTime()
          .equals(other.getBaseEjectionTime());
    }
    result = result && (hasMaxEjectionPercent() == other.hasMaxEjectionPercent());
    if (hasMaxEjectionPercent()) {
      result = result && getMaxEjectionPercent()
          .equals(other.getMaxEjectionPercent());
    }
    result = result && (hasEnforcingConsecutive5Xx() == other.hasEnforcingConsecutive5Xx());
    if (hasEnforcingConsecutive5Xx()) {
      result = result && getEnforcingConsecutive5Xx()
          .equals(other.getEnforcingConsecutive5Xx());
    }
    result = result && (hasEnforcingSuccessRate() == other.hasEnforcingSuccessRate());
    if (hasEnforcingSuccessRate()) {
      result = result && getEnforcingSuccessRate()
          .equals(other.getEnforcingSuccessRate());
    }
    result = result && (hasSuccessRateMinimumHosts() == other.hasSuccessRateMinimumHosts());
    if (hasSuccessRateMinimumHosts()) {
      result = result && getSuccessRateMinimumHosts()
          .equals(other.getSuccessRateMinimumHosts());
    }
    result = result && (hasSuccessRateRequestVolume() == other.hasSuccessRateRequestVolume());
    if (hasSuccessRateRequestVolume()) {
      result = result && getSuccessRateRequestVolume()
          .equals(other.getSuccessRateRequestVolume());
    }
    result = result && (hasSuccessRateStdevFactor() == other.hasSuccessRateStdevFactor());
    if (hasSuccessRateStdevFactor()) {
      result = result && getSuccessRateStdevFactor()
          .equals(other.getSuccessRateStdevFactor());
    }
    result = result && (hasConsecutiveGatewayFailure() == other.hasConsecutiveGatewayFailure());
    if (hasConsecutiveGatewayFailure()) {
      result = result && getConsecutiveGatewayFailure()
          .equals(other.getConsecutiveGatewayFailure());
    }
    result = result && (hasEnforcingConsecutiveGatewayFailure() == other.hasEnforcingConsecutiveGatewayFailure());
    if (hasEnforcingConsecutiveGatewayFailure()) {
      result = result && getEnforcingConsecutiveGatewayFailure()
          .equals(other.getEnforcingConsecutiveGatewayFailure());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasConsecutive5Xx()) {
      hash = (37 * hash) + CONSECUTIVE_5XX_FIELD_NUMBER;
      hash = (53 * hash) + getConsecutive5Xx().hashCode();
    }
    if (hasInterval()) {
      hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getInterval().hashCode();
    }
    if (hasBaseEjectionTime()) {
      hash = (37 * hash) + BASE_EJECTION_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBaseEjectionTime().hashCode();
    }
    if (hasMaxEjectionPercent()) {
      hash = (37 * hash) + MAX_EJECTION_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEjectionPercent().hashCode();
    }
    if (hasEnforcingConsecutive5Xx()) {
      hash = (37 * hash) + ENFORCING_CONSECUTIVE_5XX_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingConsecutive5Xx().hashCode();
    }
    if (hasEnforcingSuccessRate()) {
      hash = (37 * hash) + ENFORCING_SUCCESS_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingSuccessRate().hashCode();
    }
    if (hasSuccessRateMinimumHosts()) {
      hash = (37 * hash) + SUCCESS_RATE_MINIMUM_HOSTS_FIELD_NUMBER;
      hash = (53 * hash) + getSuccessRateMinimumHosts().hashCode();
    }
    if (hasSuccessRateRequestVolume()) {
      hash = (37 * hash) + SUCCESS_RATE_REQUEST_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + getSuccessRateRequestVolume().hashCode();
    }
    if (hasSuccessRateStdevFactor()) {
      hash = (37 * hash) + SUCCESS_RATE_STDEV_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + getSuccessRateStdevFactor().hashCode();
    }
    if (hasConsecutiveGatewayFailure()) {
      hash = (37 * hash) + CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getConsecutiveGatewayFailure().hashCode();
    }
    if (hasEnforcingConsecutiveGatewayFailure()) {
      hash = (37 * hash) + ENFORCING_CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingConsecutiveGatewayFailure().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.api.v2.cluster.OutlierDetection prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * See the :ref:`architecture overview &lt;arch_overview_outlier_detection&gt;` for
   * more information on outlier detection.
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.cluster.OutlierDetection}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.api.v2.cluster.OutlierDetection)
      io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionProto.internal_static_envoy_api_v2_cluster_OutlierDetection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionProto.internal_static_envoy_api_v2_cluster_OutlierDetection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.class, io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (consecutive5XxBuilder_ == null) {
        consecutive5Xx_ = null;
      } else {
        consecutive5Xx_ = null;
        consecutive5XxBuilder_ = null;
      }
      if (intervalBuilder_ == null) {
        interval_ = null;
      } else {
        interval_ = null;
        intervalBuilder_ = null;
      }
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTime_ = null;
      } else {
        baseEjectionTime_ = null;
        baseEjectionTimeBuilder_ = null;
      }
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercent_ = null;
      } else {
        maxEjectionPercent_ = null;
        maxEjectionPercentBuilder_ = null;
      }
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5Xx_ = null;
      } else {
        enforcingConsecutive5Xx_ = null;
        enforcingConsecutive5XxBuilder_ = null;
      }
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRate_ = null;
      } else {
        enforcingSuccessRate_ = null;
        enforcingSuccessRateBuilder_ = null;
      }
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHosts_ = null;
      } else {
        successRateMinimumHosts_ = null;
        successRateMinimumHostsBuilder_ = null;
      }
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolume_ = null;
      } else {
        successRateRequestVolume_ = null;
        successRateRequestVolumeBuilder_ = null;
      }
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactor_ = null;
      } else {
        successRateStdevFactor_ = null;
        successRateStdevFactorBuilder_ = null;
      }
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailure_ = null;
      } else {
        consecutiveGatewayFailure_ = null;
        consecutiveGatewayFailureBuilder_ = null;
      }
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailure_ = null;
      } else {
        enforcingConsecutiveGatewayFailure_ = null;
        enforcingConsecutiveGatewayFailureBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionProto.internal_static_envoy_api_v2_cluster_OutlierDetection_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.cluster.OutlierDetection getDefaultInstanceForType() {
      return io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.cluster.OutlierDetection build() {
      io.envoyproxy.envoy.api.v2.cluster.OutlierDetection result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.cluster.OutlierDetection buildPartial() {
      io.envoyproxy.envoy.api.v2.cluster.OutlierDetection result = new io.envoyproxy.envoy.api.v2.cluster.OutlierDetection(this);
      if (consecutive5XxBuilder_ == null) {
        result.consecutive5Xx_ = consecutive5Xx_;
      } else {
        result.consecutive5Xx_ = consecutive5XxBuilder_.build();
      }
      if (intervalBuilder_ == null) {
        result.interval_ = interval_;
      } else {
        result.interval_ = intervalBuilder_.build();
      }
      if (baseEjectionTimeBuilder_ == null) {
        result.baseEjectionTime_ = baseEjectionTime_;
      } else {
        result.baseEjectionTime_ = baseEjectionTimeBuilder_.build();
      }
      if (maxEjectionPercentBuilder_ == null) {
        result.maxEjectionPercent_ = maxEjectionPercent_;
      } else {
        result.maxEjectionPercent_ = maxEjectionPercentBuilder_.build();
      }
      if (enforcingConsecutive5XxBuilder_ == null) {
        result.enforcingConsecutive5Xx_ = enforcingConsecutive5Xx_;
      } else {
        result.enforcingConsecutive5Xx_ = enforcingConsecutive5XxBuilder_.build();
      }
      if (enforcingSuccessRateBuilder_ == null) {
        result.enforcingSuccessRate_ = enforcingSuccessRate_;
      } else {
        result.enforcingSuccessRate_ = enforcingSuccessRateBuilder_.build();
      }
      if (successRateMinimumHostsBuilder_ == null) {
        result.successRateMinimumHosts_ = successRateMinimumHosts_;
      } else {
        result.successRateMinimumHosts_ = successRateMinimumHostsBuilder_.build();
      }
      if (successRateRequestVolumeBuilder_ == null) {
        result.successRateRequestVolume_ = successRateRequestVolume_;
      } else {
        result.successRateRequestVolume_ = successRateRequestVolumeBuilder_.build();
      }
      if (successRateStdevFactorBuilder_ == null) {
        result.successRateStdevFactor_ = successRateStdevFactor_;
      } else {
        result.successRateStdevFactor_ = successRateStdevFactorBuilder_.build();
      }
      if (consecutiveGatewayFailureBuilder_ == null) {
        result.consecutiveGatewayFailure_ = consecutiveGatewayFailure_;
      } else {
        result.consecutiveGatewayFailure_ = consecutiveGatewayFailureBuilder_.build();
      }
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        result.enforcingConsecutiveGatewayFailure_ = enforcingConsecutiveGatewayFailure_;
      } else {
        result.enforcingConsecutiveGatewayFailure_ = enforcingConsecutiveGatewayFailureBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.api.v2.cluster.OutlierDetection) {
        return mergeFrom((io.envoyproxy.envoy.api.v2.cluster.OutlierDetection)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.api.v2.cluster.OutlierDetection other) {
      if (other == io.envoyproxy.envoy.api.v2.cluster.OutlierDetection.getDefaultInstance()) return this;
      if (other.hasConsecutive5Xx()) {
        mergeConsecutive5Xx(other.getConsecutive5Xx());
      }
      if (other.hasInterval()) {
        mergeInterval(other.getInterval());
      }
      if (other.hasBaseEjectionTime()) {
        mergeBaseEjectionTime(other.getBaseEjectionTime());
      }
      if (other.hasMaxEjectionPercent()) {
        mergeMaxEjectionPercent(other.getMaxEjectionPercent());
      }
      if (other.hasEnforcingConsecutive5Xx()) {
        mergeEnforcingConsecutive5Xx(other.getEnforcingConsecutive5Xx());
      }
      if (other.hasEnforcingSuccessRate()) {
        mergeEnforcingSuccessRate(other.getEnforcingSuccessRate());
      }
      if (other.hasSuccessRateMinimumHosts()) {
        mergeSuccessRateMinimumHosts(other.getSuccessRateMinimumHosts());
      }
      if (other.hasSuccessRateRequestVolume()) {
        mergeSuccessRateRequestVolume(other.getSuccessRateRequestVolume());
      }
      if (other.hasSuccessRateStdevFactor()) {
        mergeSuccessRateStdevFactor(other.getSuccessRateStdevFactor());
      }
      if (other.hasConsecutiveGatewayFailure()) {
        mergeConsecutiveGatewayFailure(other.getConsecutiveGatewayFailure());
      }
      if (other.hasEnforcingConsecutiveGatewayFailure()) {
        mergeEnforcingConsecutiveGatewayFailure(other.getEnforcingConsecutiveGatewayFailure());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.api.v2.cluster.OutlierDetection parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.api.v2.cluster.OutlierDetection) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.UInt32Value consecutive5Xx_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutive5XxBuilder_;
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public boolean hasConsecutive5Xx() {
      return consecutive5XxBuilder_ != null || consecutive5Xx_ != null;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public com.google.protobuf.UInt32Value getConsecutive5Xx() {
      if (consecutive5XxBuilder_ == null) {
        return consecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5Xx_;
      } else {
        return consecutive5XxBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder setConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (consecutive5XxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consecutive5Xx_ = value;
        onChanged();
      } else {
        consecutive5XxBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder setConsecutive5Xx(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (consecutive5XxBuilder_ == null) {
        consecutive5Xx_ = builderForValue.build();
        onChanged();
      } else {
        consecutive5XxBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder mergeConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (consecutive5XxBuilder_ == null) {
        if (consecutive5Xx_ != null) {
          consecutive5Xx_ =
            com.google.protobuf.UInt32Value.newBuilder(consecutive5Xx_).mergeFrom(value).buildPartial();
        } else {
          consecutive5Xx_ = value;
        }
        onChanged();
      } else {
        consecutive5XxBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder clearConsecutive5Xx() {
      if (consecutive5XxBuilder_ == null) {
        consecutive5Xx_ = null;
        onChanged();
      } else {
        consecutive5Xx_ = null;
        consecutive5XxBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getConsecutive5XxBuilder() {
      
      onChanged();
      return getConsecutive5XxFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxOrBuilder() {
      if (consecutive5XxBuilder_ != null) {
        return consecutive5XxBuilder_.getMessageOrBuilder();
      } else {
        return consecutive5Xx_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5Xx_;
      }
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getConsecutive5XxFieldBuilder() {
      if (consecutive5XxBuilder_ == null) {
        consecutive5XxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getConsecutive5Xx(),
                getParentForChildren(),
                isClean());
        consecutive5Xx_ = null;
      }
      return consecutive5XxBuilder_;
    }

    private com.google.protobuf.Duration interval_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public boolean hasInterval() {
      return intervalBuilder_ != null || interval_ != null;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration getInterval() {
      if (intervalBuilder_ == null) {
        return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
      } else {
        return intervalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setInterval(com.google.protobuf.Duration value) {
      if (intervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        interval_ = value;
        onChanged();
      } else {
        intervalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setInterval(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (intervalBuilder_ == null) {
        interval_ = builderForValue.build();
        onChanged();
      } else {
        intervalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeInterval(com.google.protobuf.Duration value) {
      if (intervalBuilder_ == null) {
        if (interval_ != null) {
          interval_ =
            com.google.protobuf.Duration.newBuilder(interval_).mergeFrom(value).buildPartial();
        } else {
          interval_ = value;
        }
        onChanged();
      } else {
        intervalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearInterval() {
      if (intervalBuilder_ == null) {
        interval_ = null;
        onChanged();
      } else {
        interval_ = null;
        intervalBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getIntervalBuilder() {
      
      onChanged();
      return getIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
      if (intervalBuilder_ != null) {
        return intervalBuilder_.getMessageOrBuilder();
      } else {
        return interval_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : interval_;
      }
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getIntervalFieldBuilder() {
      if (intervalBuilder_ == null) {
        intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getInterval(),
                getParentForChildren(),
                isClean());
        interval_ = null;
      }
      return intervalBuilder_;
    }

    private com.google.protobuf.Duration baseEjectionTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> baseEjectionTimeBuilder_;
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public boolean hasBaseEjectionTime() {
      return baseEjectionTimeBuilder_ != null || baseEjectionTime_ != null;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration getBaseEjectionTime() {
      if (baseEjectionTimeBuilder_ == null) {
        return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
      } else {
        return baseEjectionTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setBaseEjectionTime(com.google.protobuf.Duration value) {
      if (baseEjectionTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        baseEjectionTime_ = value;
        onChanged();
      } else {
        baseEjectionTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setBaseEjectionTime(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTime_ = builderForValue.build();
        onChanged();
      } else {
        baseEjectionTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeBaseEjectionTime(com.google.protobuf.Duration value) {
      if (baseEjectionTimeBuilder_ == null) {
        if (baseEjectionTime_ != null) {
          baseEjectionTime_ =
            com.google.protobuf.Duration.newBuilder(baseEjectionTime_).mergeFrom(value).buildPartial();
        } else {
          baseEjectionTime_ = value;
        }
        onChanged();
      } else {
        baseEjectionTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearBaseEjectionTime() {
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTime_ = null;
        onChanged();
      } else {
        baseEjectionTime_ = null;
        baseEjectionTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getBaseEjectionTimeBuilder() {
      
      onChanged();
      return getBaseEjectionTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder() {
      if (baseEjectionTimeBuilder_ != null) {
        return baseEjectionTimeBuilder_.getMessageOrBuilder();
      } else {
        return baseEjectionTime_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
      }
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getBaseEjectionTimeFieldBuilder() {
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getBaseEjectionTime(),
                getParentForChildren(),
                isClean());
        baseEjectionTime_ = null;
      }
      return baseEjectionTimeBuilder_;
    }

    private com.google.protobuf.UInt32Value maxEjectionPercent_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxEjectionPercentBuilder_;
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public boolean hasMaxEjectionPercent() {
      return maxEjectionPercentBuilder_ != null || maxEjectionPercent_ != null;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getMaxEjectionPercent() {
      if (maxEjectionPercentBuilder_ == null) {
        return maxEjectionPercent_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxEjectionPercent_;
      } else {
        return maxEjectionPercentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEjectionPercent(com.google.protobuf.UInt32Value value) {
      if (maxEjectionPercentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxEjectionPercent_ = value;
        onChanged();
      } else {
        maxEjectionPercentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEjectionPercent(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercent_ = builderForValue.build();
        onChanged();
      } else {
        maxEjectionPercentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMaxEjectionPercent(com.google.protobuf.UInt32Value value) {
      if (maxEjectionPercentBuilder_ == null) {
        if (maxEjectionPercent_ != null) {
          maxEjectionPercent_ =
            com.google.protobuf.UInt32Value.newBuilder(maxEjectionPercent_).mergeFrom(value).buildPartial();
        } else {
          maxEjectionPercent_ = value;
        }
        onChanged();
      } else {
        maxEjectionPercentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMaxEjectionPercent() {
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercent_ = null;
        onChanged();
      } else {
        maxEjectionPercent_ = null;
        maxEjectionPercentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxEjectionPercentBuilder() {
      
      onChanged();
      return getMaxEjectionPercentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxEjectionPercentOrBuilder() {
      if (maxEjectionPercentBuilder_ != null) {
        return maxEjectionPercentBuilder_.getMessageOrBuilder();
      } else {
        return maxEjectionPercent_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxEjectionPercent_;
      }
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxEjectionPercentFieldBuilder() {
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxEjectionPercent(),
                getParentForChildren(),
                isClean());
        maxEjectionPercent_ = null;
      }
      return maxEjectionPercentBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingConsecutive5Xx_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingConsecutive5XxBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public boolean hasEnforcingConsecutive5Xx() {
      return enforcingConsecutive5XxBuilder_ != null || enforcingConsecutive5Xx_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getEnforcingConsecutive5Xx() {
      if (enforcingConsecutive5XxBuilder_ == null) {
        return enforcingConsecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutive5Xx_;
      } else {
        return enforcingConsecutive5XxBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutive5XxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingConsecutive5Xx_ = value;
        onChanged();
      } else {
        enforcingConsecutive5XxBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutive5Xx(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5Xx_ = builderForValue.build();
        onChanged();
      } else {
        enforcingConsecutive5XxBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutive5XxBuilder_ == null) {
        if (enforcingConsecutive5Xx_ != null) {
          enforcingConsecutive5Xx_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingConsecutive5Xx_).mergeFrom(value).buildPartial();
        } else {
          enforcingConsecutive5Xx_ = value;
        }
        onChanged();
      } else {
        enforcingConsecutive5XxBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingConsecutive5Xx() {
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5Xx_ = null;
        onChanged();
      } else {
        enforcingConsecutive5Xx_ = null;
        enforcingConsecutive5XxBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingConsecutive5XxBuilder() {
      
      onChanged();
      return getEnforcingConsecutive5XxFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutive5XxOrBuilder() {
      if (enforcingConsecutive5XxBuilder_ != null) {
        return enforcingConsecutive5XxBuilder_.getMessageOrBuilder();
      } else {
        return enforcingConsecutive5Xx_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutive5Xx_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingConsecutive5XxFieldBuilder() {
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5XxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingConsecutive5Xx(),
                getParentForChildren(),
                isClean());
        enforcingConsecutive5Xx_ = null;
      }
      return enforcingConsecutive5XxBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingSuccessRate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingSuccessRateBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public boolean hasEnforcingSuccessRate() {
      return enforcingSuccessRateBuilder_ != null || enforcingSuccessRate_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getEnforcingSuccessRate() {
      if (enforcingSuccessRateBuilder_ == null) {
        return enforcingSuccessRate_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingSuccessRate_;
      } else {
        return enforcingSuccessRateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingSuccessRate(com.google.protobuf.UInt32Value value) {
      if (enforcingSuccessRateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingSuccessRate_ = value;
        onChanged();
      } else {
        enforcingSuccessRateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingSuccessRate(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRate_ = builderForValue.build();
        onChanged();
      } else {
        enforcingSuccessRateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingSuccessRate(com.google.protobuf.UInt32Value value) {
      if (enforcingSuccessRateBuilder_ == null) {
        if (enforcingSuccessRate_ != null) {
          enforcingSuccessRate_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingSuccessRate_).mergeFrom(value).buildPartial();
        } else {
          enforcingSuccessRate_ = value;
        }
        onChanged();
      } else {
        enforcingSuccessRateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingSuccessRate() {
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRate_ = null;
        onChanged();
      } else {
        enforcingSuccessRate_ = null;
        enforcingSuccessRateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingSuccessRateBuilder() {
      
      onChanged();
      return getEnforcingSuccessRateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingSuccessRateOrBuilder() {
      if (enforcingSuccessRateBuilder_ != null) {
        return enforcingSuccessRateBuilder_.getMessageOrBuilder();
      } else {
        return enforcingSuccessRate_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingSuccessRate_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingSuccessRateFieldBuilder() {
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingSuccessRate(),
                getParentForChildren(),
                isClean());
        enforcingSuccessRate_ = null;
      }
      return enforcingSuccessRateBuilder_;
    }

    private com.google.protobuf.UInt32Value successRateMinimumHosts_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> successRateMinimumHostsBuilder_;
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public boolean hasSuccessRateMinimumHosts() {
      return successRateMinimumHostsBuilder_ != null || successRateMinimumHosts_ != null;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public com.google.protobuf.UInt32Value getSuccessRateMinimumHosts() {
      if (successRateMinimumHostsBuilder_ == null) {
        return successRateMinimumHosts_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateMinimumHosts_;
      } else {
        return successRateMinimumHostsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder setSuccessRateMinimumHosts(com.google.protobuf.UInt32Value value) {
      if (successRateMinimumHostsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        successRateMinimumHosts_ = value;
        onChanged();
      } else {
        successRateMinimumHostsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder setSuccessRateMinimumHosts(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHosts_ = builderForValue.build();
        onChanged();
      } else {
        successRateMinimumHostsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder mergeSuccessRateMinimumHosts(com.google.protobuf.UInt32Value value) {
      if (successRateMinimumHostsBuilder_ == null) {
        if (successRateMinimumHosts_ != null) {
          successRateMinimumHosts_ =
            com.google.protobuf.UInt32Value.newBuilder(successRateMinimumHosts_).mergeFrom(value).buildPartial();
        } else {
          successRateMinimumHosts_ = value;
        }
        onChanged();
      } else {
        successRateMinimumHostsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder clearSuccessRateMinimumHosts() {
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHosts_ = null;
        onChanged();
      } else {
        successRateMinimumHosts_ = null;
        successRateMinimumHostsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getSuccessRateMinimumHostsBuilder() {
      
      onChanged();
      return getSuccessRateMinimumHostsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateMinimumHostsOrBuilder() {
      if (successRateMinimumHostsBuilder_ != null) {
        return successRateMinimumHostsBuilder_.getMessageOrBuilder();
      } else {
        return successRateMinimumHosts_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : successRateMinimumHosts_;
      }
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getSuccessRateMinimumHostsFieldBuilder() {
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHostsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getSuccessRateMinimumHosts(),
                getParentForChildren(),
                isClean());
        successRateMinimumHosts_ = null;
      }
      return successRateMinimumHostsBuilder_;
    }

    private com.google.protobuf.UInt32Value successRateRequestVolume_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> successRateRequestVolumeBuilder_;
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public boolean hasSuccessRateRequestVolume() {
      return successRateRequestVolumeBuilder_ != null || successRateRequestVolume_ != null;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public com.google.protobuf.UInt32Value getSuccessRateRequestVolume() {
      if (successRateRequestVolumeBuilder_ == null) {
        return successRateRequestVolume_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateRequestVolume_;
      } else {
        return successRateRequestVolumeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder setSuccessRateRequestVolume(com.google.protobuf.UInt32Value value) {
      if (successRateRequestVolumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        successRateRequestVolume_ = value;
        onChanged();
      } else {
        successRateRequestVolumeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder setSuccessRateRequestVolume(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolume_ = builderForValue.build();
        onChanged();
      } else {
        successRateRequestVolumeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder mergeSuccessRateRequestVolume(com.google.protobuf.UInt32Value value) {
      if (successRateRequestVolumeBuilder_ == null) {
        if (successRateRequestVolume_ != null) {
          successRateRequestVolume_ =
            com.google.protobuf.UInt32Value.newBuilder(successRateRequestVolume_).mergeFrom(value).buildPartial();
        } else {
          successRateRequestVolume_ = value;
        }
        onChanged();
      } else {
        successRateRequestVolumeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder clearSuccessRateRequestVolume() {
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolume_ = null;
        onChanged();
      } else {
        successRateRequestVolume_ = null;
        successRateRequestVolumeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getSuccessRateRequestVolumeBuilder() {
      
      onChanged();
      return getSuccessRateRequestVolumeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateRequestVolumeOrBuilder() {
      if (successRateRequestVolumeBuilder_ != null) {
        return successRateRequestVolumeBuilder_.getMessageOrBuilder();
      } else {
        return successRateRequestVolume_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : successRateRequestVolume_;
      }
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getSuccessRateRequestVolumeFieldBuilder() {
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolumeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getSuccessRateRequestVolume(),
                getParentForChildren(),
                isClean());
        successRateRequestVolume_ = null;
      }
      return successRateRequestVolumeBuilder_;
    }

    private com.google.protobuf.UInt32Value successRateStdevFactor_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> successRateStdevFactorBuilder_;
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public boolean hasSuccessRateStdevFactor() {
      return successRateStdevFactorBuilder_ != null || successRateStdevFactor_ != null;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public com.google.protobuf.UInt32Value getSuccessRateStdevFactor() {
      if (successRateStdevFactorBuilder_ == null) {
        return successRateStdevFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateStdevFactor_;
      } else {
        return successRateStdevFactorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder setSuccessRateStdevFactor(com.google.protobuf.UInt32Value value) {
      if (successRateStdevFactorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        successRateStdevFactor_ = value;
        onChanged();
      } else {
        successRateStdevFactorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder setSuccessRateStdevFactor(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactor_ = builderForValue.build();
        onChanged();
      } else {
        successRateStdevFactorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder mergeSuccessRateStdevFactor(com.google.protobuf.UInt32Value value) {
      if (successRateStdevFactorBuilder_ == null) {
        if (successRateStdevFactor_ != null) {
          successRateStdevFactor_ =
            com.google.protobuf.UInt32Value.newBuilder(successRateStdevFactor_).mergeFrom(value).buildPartial();
        } else {
          successRateStdevFactor_ = value;
        }
        onChanged();
      } else {
        successRateStdevFactorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder clearSuccessRateStdevFactor() {
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactor_ = null;
        onChanged();
      } else {
        successRateStdevFactor_ = null;
        successRateStdevFactorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getSuccessRateStdevFactorBuilder() {
      
      onChanged();
      return getSuccessRateStdevFactorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateStdevFactorOrBuilder() {
      if (successRateStdevFactorBuilder_ != null) {
        return successRateStdevFactorBuilder_.getMessageOrBuilder();
      } else {
        return successRateStdevFactor_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : successRateStdevFactor_;
      }
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getSuccessRateStdevFactorFieldBuilder() {
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getSuccessRateStdevFactor(),
                getParentForChildren(),
                isClean());
        successRateStdevFactor_ = null;
      }
      return successRateStdevFactorBuilder_;
    }

    private com.google.protobuf.UInt32Value consecutiveGatewayFailure_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutiveGatewayFailureBuilder_;
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public boolean hasConsecutiveGatewayFailure() {
      return consecutiveGatewayFailureBuilder_ != null || consecutiveGatewayFailure_ != null;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public com.google.protobuf.UInt32Value getConsecutiveGatewayFailure() {
      if (consecutiveGatewayFailureBuilder_ == null) {
        return consecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayFailure_;
      } else {
        return consecutiveGatewayFailureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder setConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (consecutiveGatewayFailureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consecutiveGatewayFailure_ = value;
        onChanged();
      } else {
        consecutiveGatewayFailureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder setConsecutiveGatewayFailure(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailure_ = builderForValue.build();
        onChanged();
      } else {
        consecutiveGatewayFailureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder mergeConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (consecutiveGatewayFailureBuilder_ == null) {
        if (consecutiveGatewayFailure_ != null) {
          consecutiveGatewayFailure_ =
            com.google.protobuf.UInt32Value.newBuilder(consecutiveGatewayFailure_).mergeFrom(value).buildPartial();
        } else {
          consecutiveGatewayFailure_ = value;
        }
        onChanged();
      } else {
        consecutiveGatewayFailureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder clearConsecutiveGatewayFailure() {
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailure_ = null;
        onChanged();
      } else {
        consecutiveGatewayFailure_ = null;
        consecutiveGatewayFailureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getConsecutiveGatewayFailureBuilder() {
      
      onChanged();
      return getConsecutiveGatewayFailureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayFailureOrBuilder() {
      if (consecutiveGatewayFailureBuilder_ != null) {
        return consecutiveGatewayFailureBuilder_.getMessageOrBuilder();
      } else {
        return consecutiveGatewayFailure_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayFailure_;
      }
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status or
     * connection errors that are mapped to one of those status codes) before a
     * consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getConsecutiveGatewayFailureFieldBuilder() {
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getConsecutiveGatewayFailure(),
                getParentForChildren(),
                isClean());
        consecutiveGatewayFailure_ = null;
      }
      return consecutiveGatewayFailureBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingConsecutiveGatewayFailure_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingConsecutiveGatewayFailureBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public boolean hasEnforcingConsecutiveGatewayFailure() {
      return enforcingConsecutiveGatewayFailureBuilder_ != null || enforcingConsecutiveGatewayFailure_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getEnforcingConsecutiveGatewayFailure() {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        return enforcingConsecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveGatewayFailure_;
      } else {
        return enforcingConsecutiveGatewayFailureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingConsecutiveGatewayFailure_ = value;
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutiveGatewayFailure(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailure_ = builderForValue.build();
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        if (enforcingConsecutiveGatewayFailure_ != null) {
          enforcingConsecutiveGatewayFailure_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingConsecutiveGatewayFailure_).mergeFrom(value).buildPartial();
        } else {
          enforcingConsecutiveGatewayFailure_ = value;
        }
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingConsecutiveGatewayFailure() {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailure_ = null;
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailure_ = null;
        enforcingConsecutiveGatewayFailureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingConsecutiveGatewayFailureBuilder() {
      
      onChanged();
      return getEnforcingConsecutiveGatewayFailureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutiveGatewayFailureOrBuilder() {
      if (enforcingConsecutiveGatewayFailureBuilder_ != null) {
        return enforcingConsecutiveGatewayFailureBuilder_.getMessageOrBuilder();
      } else {
        return enforcingConsecutiveGatewayFailure_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveGatewayFailure_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingConsecutiveGatewayFailureFieldBuilder() {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingConsecutiveGatewayFailure(),
                getParentForChildren(),
                isClean());
        enforcingConsecutiveGatewayFailure_ = null;
      }
      return enforcingConsecutiveGatewayFailureBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.api.v2.cluster.OutlierDetection)
  }

  // @@protoc_insertion_point(class_scope:envoy.api.v2.cluster.OutlierDetection)
  private static final io.envoyproxy.envoy.api.v2.cluster.OutlierDetection DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.api.v2.cluster.OutlierDetection();
  }

  public static io.envoyproxy.envoy.api.v2.cluster.OutlierDetection getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OutlierDetection>
      PARSER = new com.google.protobuf.AbstractParser<OutlierDetection>() {
    @java.lang.Override
    public OutlierDetection parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OutlierDetection(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OutlierDetection> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OutlierDetection> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.cluster.OutlierDetection getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

