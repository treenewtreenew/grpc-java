// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/base.proto

package io.envoyproxy.envoy.api.v2.core;

public interface SocketOptionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.SocketOption)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An optional name to give this socket option for debugging, etc.
   * Uniqueness is not required and no special meaning is assumed.
   * </pre>
   *
   * <code>string description = 1;</code>
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * An optional name to give this socket option for debugging, etc.
   * Uniqueness is not required and no special meaning is assumed.
   * </pre>
   *
   * <code>string description = 1;</code>
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Corresponding to the level value passed to setsockopt, such as IPPROTO_TCP
   * </pre>
   *
   * <code>int64 level = 2;</code>
   */
  long getLevel();

  /**
   * <pre>
   * The numeric name as passed to setsockopt
   * </pre>
   *
   * <code>int64 name = 3;</code>
   */
  long getName();

  /**
   * <pre>
   * Because many sockopts take an int value.
   * </pre>
   *
   * <code>int64 int_value = 4;</code>
   */
  long getIntValue();

  /**
   * <pre>
   * Otherwise it's a byte buffer.
   * </pre>
   *
   * <code>bytes buf_value = 5;</code>
   */
  com.google.protobuf.ByteString getBufValue();

  /**
   * <pre>
   * The state in which the option will be applied. When used in BindConfig
   * STATE_PREBIND is currently the only valid value.
   * </pre>
   *
   * <code>.envoy.api.v2.core.SocketOption.SocketState state = 6 [(.validate.rules) = { ... }</code>
   */
  int getStateValue();
  /**
   * <pre>
   * The state in which the option will be applied. When used in BindConfig
   * STATE_PREBIND is currently the only valid value.
   * </pre>
   *
   * <code>.envoy.api.v2.core.SocketOption.SocketState state = 6 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.api.v2.core.SocketOption.SocketState getState();

  public io.envoyproxy.envoy.api.v2.core.SocketOption.ValueCase getValueCase();
}
