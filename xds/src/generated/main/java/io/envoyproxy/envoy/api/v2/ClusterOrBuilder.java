// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/cds.proto

package io.envoyproxy.envoy.api.v2;

public interface ClusterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.Cluster)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Supplies the name of the cluster which must be unique across all clusters.
   * The cluster name is used when emitting
   * :ref:`statistics &lt;config_cluster_manager_cluster_stats&gt;` if :ref:`alt_stat_name
   * &lt;envoy_api_field_Cluster.alt_stat_name&gt;` is not provided.
   * Any ``:`` in the cluster name will be converted to ``_`` when emitting statistics.
   * By default, the maximum length of a cluster name is limited to 60
   * characters. This limit can be increased by setting the
   * :option:`--max-obj-name-len` command line argument to the desired value.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * Supplies the name of the cluster which must be unique across all clusters.
   * The cluster name is used when emitting
   * :ref:`statistics &lt;config_cluster_manager_cluster_stats&gt;` if :ref:`alt_stat_name
   * &lt;envoy_api_field_Cluster.alt_stat_name&gt;` is not provided.
   * Any ``:`` in the cluster name will be converted to ``_`` when emitting statistics.
   * By default, the maximum length of a cluster name is limited to 60
   * characters. This limit can be increased by setting the
   * :option:`--max-obj-name-len` command line argument to the desired value.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * An optional alternative to the cluster name to be used while emitting stats.
   * Any ``:`` in the name will be converted to ``_`` when emitting statistics. This should not be
   * confused with :ref:`Router Filter Header
   * &lt;config_http_filters_router_x-envoy-upstream-alt-stat-name&gt;`.
   * </pre>
   *
   * <code>string alt_stat_name = 28;</code>
   */
  java.lang.String getAltStatName();
  /**
   * <pre>
   * An optional alternative to the cluster name to be used while emitting stats.
   * Any ``:`` in the name will be converted to ``_`` when emitting statistics. This should not be
   * confused with :ref:`Router Filter Header
   * &lt;config_http_filters_router_x-envoy-upstream-alt-stat-name&gt;`.
   * </pre>
   *
   * <code>string alt_stat_name = 28;</code>
   */
  com.google.protobuf.ByteString
      getAltStatNameBytes();

  /**
   * <pre>
   * The :ref:`service discovery type &lt;arch_overview_service_discovery_types&gt;`
   * to use for resolving the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.DiscoveryType type = 2 [(.validate.rules) = { ... }</code>
   */
  int getTypeValue();
  /**
   * <pre>
   * The :ref:`service discovery type &lt;arch_overview_service_discovery_types&gt;`
   * to use for resolving the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.DiscoveryType type = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.DiscoveryType getType();

  /**
   * <pre>
   * Configuration to use for EDS updates for the Cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.EdsClusterConfig eds_cluster_config = 3;</code>
   */
  boolean hasEdsClusterConfig();
  /**
   * <pre>
   * Configuration to use for EDS updates for the Cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.EdsClusterConfig eds_cluster_config = 3;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.EdsClusterConfig getEdsClusterConfig();
  /**
   * <pre>
   * Configuration to use for EDS updates for the Cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.EdsClusterConfig eds_cluster_config = 3;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.EdsClusterConfigOrBuilder getEdsClusterConfigOrBuilder();

  /**
   * <pre>
   * The timeout for new network connections to hosts in the cluster.
   * </pre>
   *
   * <code>.google.protobuf.Duration connect_timeout = 4 [(.validate.rules) = { ... }</code>
   */
  boolean hasConnectTimeout();
  /**
   * <pre>
   * The timeout for new network connections to hosts in the cluster.
   * </pre>
   *
   * <code>.google.protobuf.Duration connect_timeout = 4 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.Duration getConnectTimeout();
  /**
   * <pre>
   * The timeout for new network connections to hosts in the cluster.
   * </pre>
   *
   * <code>.google.protobuf.Duration connect_timeout = 4 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder();

  /**
   * <pre>
   * Soft limit on size of the cluster’s connections read and write buffers. If
   * unspecified, an implementation defined default is applied (1MiB).
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;</code>
   */
  boolean hasPerConnectionBufferLimitBytes();
  /**
   * <pre>
   * Soft limit on size of the cluster’s connections read and write buffers. If
   * unspecified, an implementation defined default is applied (1MiB).
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;</code>
   */
  com.google.protobuf.UInt32Value getPerConnectionBufferLimitBytes();
  /**
   * <pre>
   * Soft limit on size of the cluster’s connections read and write buffers. If
   * unspecified, an implementation defined default is applied (1MiB).
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 5;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getPerConnectionBufferLimitBytesOrBuilder();

  /**
   * <pre>
   * The :ref:`load balancer type &lt;arch_overview_load_balancing_types&gt;` to use
   * when picking a host in the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LbPolicy lb_policy = 6 [(.validate.rules) = { ... }</code>
   */
  int getLbPolicyValue();
  /**
   * <pre>
   * The :ref:`load balancer type &lt;arch_overview_load_balancing_types&gt;` to use
   * when picking a host in the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LbPolicy lb_policy = 6 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.LbPolicy getLbPolicy();

  /**
   * <pre>
   * If the service discovery type is
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * then hosts is required.
   * .. attention::
   *   **This field is deprecated**. Set the
   *   :ref:`load_assignment&lt;envoy_api_field_Cluster.load_assignment&gt;` field instead.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address hosts = 7 [deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.List<io.envoyproxy.envoy.api.v2.core.Address> 
      getHostsList();
  /**
   * <pre>
   * If the service discovery type is
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * then hosts is required.
   * .. attention::
   *   **This field is deprecated**. Set the
   *   :ref:`load_assignment&lt;envoy_api_field_Cluster.load_assignment&gt;` field instead.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address hosts = 7 [deprecated = true];</code>
   */
  @java.lang.Deprecated io.envoyproxy.envoy.api.v2.core.Address getHosts(int index);
  /**
   * <pre>
   * If the service discovery type is
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * then hosts is required.
   * .. attention::
   *   **This field is deprecated**. Set the
   *   :ref:`load_assignment&lt;envoy_api_field_Cluster.load_assignment&gt;` field instead.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address hosts = 7 [deprecated = true];</code>
   */
  @java.lang.Deprecated int getHostsCount();
  /**
   * <pre>
   * If the service discovery type is
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * then hosts is required.
   * .. attention::
   *   **This field is deprecated**. Set the
   *   :ref:`load_assignment&lt;envoy_api_field_Cluster.load_assignment&gt;` field instead.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address hosts = 7 [deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.List<? extends io.envoyproxy.envoy.api.v2.core.AddressOrBuilder> 
      getHostsOrBuilderList();
  /**
   * <pre>
   * If the service discovery type is
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * then hosts is required.
   * .. attention::
   *   **This field is deprecated**. Set the
   *   :ref:`load_assignment&lt;envoy_api_field_Cluster.load_assignment&gt;` field instead.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address hosts = 7 [deprecated = true];</code>
   */
  @java.lang.Deprecated io.envoyproxy.envoy.api.v2.core.AddressOrBuilder getHostsOrBuilder(
      int index);

  /**
   * <pre>
   * Setting this is required for specifying members of
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;` clusters.
   * This field supersedes :ref:`hosts&lt;envoy_api_field_Cluster.hosts&gt;` field.
   * [#comment:TODO(dio): Deprecate the hosts field and add it to DEPRECATED.md
   * once load_assignment is implemented.]
   * .. attention::
   *   Setting this allows non-EDS cluster types to contain embedded EDS equivalent
   *   :ref:`endpoint assignments&lt;envoy_api_msg_ClusterLoadAssignment&gt;`.
   *   Setting this overrides :ref:`hosts&lt;envoy_api_field_Cluster.hosts&gt;` values.
   * </pre>
   *
   * <code>.envoy.api.v2.ClusterLoadAssignment load_assignment = 33;</code>
   */
  boolean hasLoadAssignment();
  /**
   * <pre>
   * Setting this is required for specifying members of
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;` clusters.
   * This field supersedes :ref:`hosts&lt;envoy_api_field_Cluster.hosts&gt;` field.
   * [#comment:TODO(dio): Deprecate the hosts field and add it to DEPRECATED.md
   * once load_assignment is implemented.]
   * .. attention::
   *   Setting this allows non-EDS cluster types to contain embedded EDS equivalent
   *   :ref:`endpoint assignments&lt;envoy_api_msg_ClusterLoadAssignment&gt;`.
   *   Setting this overrides :ref:`hosts&lt;envoy_api_field_Cluster.hosts&gt;` values.
   * </pre>
   *
   * <code>.envoy.api.v2.ClusterLoadAssignment load_assignment = 33;</code>
   */
  io.envoyproxy.envoy.api.v2.ClusterLoadAssignment getLoadAssignment();
  /**
   * <pre>
   * Setting this is required for specifying members of
   * :ref:`STATIC&lt;envoy_api_enum_value_Cluster.DiscoveryType.STATIC&gt;`,
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;` clusters.
   * This field supersedes :ref:`hosts&lt;envoy_api_field_Cluster.hosts&gt;` field.
   * [#comment:TODO(dio): Deprecate the hosts field and add it to DEPRECATED.md
   * once load_assignment is implemented.]
   * .. attention::
   *   Setting this allows non-EDS cluster types to contain embedded EDS equivalent
   *   :ref:`endpoint assignments&lt;envoy_api_msg_ClusterLoadAssignment&gt;`.
   *   Setting this overrides :ref:`hosts&lt;envoy_api_field_Cluster.hosts&gt;` values.
   * </pre>
   *
   * <code>.envoy.api.v2.ClusterLoadAssignment load_assignment = 33;</code>
   */
  io.envoyproxy.envoy.api.v2.ClusterLoadAssignmentOrBuilder getLoadAssignmentOrBuilder();

  /**
   * <pre>
   * Optional :ref:`active health checking &lt;arch_overview_health_checking&gt;`
   * configuration for the cluster. If no
   * configuration is specified no health checking will be done and all cluster
   * members will be considered healthy at all times.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HealthCheck health_checks = 8;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.HealthCheck> 
      getHealthChecksList();
  /**
   * <pre>
   * Optional :ref:`active health checking &lt;arch_overview_health_checking&gt;`
   * configuration for the cluster. If no
   * configuration is specified no health checking will be done and all cluster
   * members will be considered healthy at all times.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HealthCheck health_checks = 8;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HealthCheck getHealthChecks(int index);
  /**
   * <pre>
   * Optional :ref:`active health checking &lt;arch_overview_health_checking&gt;`
   * configuration for the cluster. If no
   * configuration is specified no health checking will be done and all cluster
   * members will be considered healthy at all times.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HealthCheck health_checks = 8;</code>
   */
  int getHealthChecksCount();
  /**
   * <pre>
   * Optional :ref:`active health checking &lt;arch_overview_health_checking&gt;`
   * configuration for the cluster. If no
   * configuration is specified no health checking will be done and all cluster
   * members will be considered healthy at all times.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HealthCheck health_checks = 8;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.HealthCheckOrBuilder> 
      getHealthChecksOrBuilderList();
  /**
   * <pre>
   * Optional :ref:`active health checking &lt;arch_overview_health_checking&gt;`
   * configuration for the cluster. If no
   * configuration is specified no health checking will be done and all cluster
   * members will be considered healthy at all times.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HealthCheck health_checks = 8;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HealthCheckOrBuilder getHealthChecksOrBuilder(
      int index);

  /**
   * <pre>
   * Optional maximum requests for a single upstream connection. This parameter
   * is respected by both the HTTP/1.1 and HTTP/2 connection pool
   * implementations. If not specified, there is no limit. Setting this
   * parameter to 1 will effectively disable keep alive.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_requests_per_connection = 9;</code>
   */
  boolean hasMaxRequestsPerConnection();
  /**
   * <pre>
   * Optional maximum requests for a single upstream connection. This parameter
   * is respected by both the HTTP/1.1 and HTTP/2 connection pool
   * implementations. If not specified, there is no limit. Setting this
   * parameter to 1 will effectively disable keep alive.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_requests_per_connection = 9;</code>
   */
  com.google.protobuf.UInt32Value getMaxRequestsPerConnection();
  /**
   * <pre>
   * Optional maximum requests for a single upstream connection. This parameter
   * is respected by both the HTTP/1.1 and HTTP/2 connection pool
   * implementations. If not specified, there is no limit. Setting this
   * parameter to 1 will effectively disable keep alive.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_requests_per_connection = 9;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMaxRequestsPerConnectionOrBuilder();

  /**
   * <pre>
   * Optional :ref:`circuit breaking &lt;arch_overview_circuit_break&gt;` for the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.cluster.CircuitBreakers circuit_breakers = 10;</code>
   */
  boolean hasCircuitBreakers();
  /**
   * <pre>
   * Optional :ref:`circuit breaking &lt;arch_overview_circuit_break&gt;` for the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.cluster.CircuitBreakers circuit_breakers = 10;</code>
   */
  io.envoyproxy.envoy.api.v2.cluster.CircuitBreakers getCircuitBreakers();
  /**
   * <pre>
   * Optional :ref:`circuit breaking &lt;arch_overview_circuit_break&gt;` for the cluster.
   * </pre>
   *
   * <code>.envoy.api.v2.cluster.CircuitBreakers circuit_breakers = 10;</code>
   */
  io.envoyproxy.envoy.api.v2.cluster.CircuitBreakersOrBuilder getCircuitBreakersOrBuilder();

  /**
   * <pre>
   * The TLS configuration for connections to the upstream cluster. If no TLS
   * configuration is specified, TLS will not be used for new connections.
   * .. attention::
   *   Server certificate verification is not enabled by default. Configure
   *   :ref:`trusted_ca&lt;envoy_api_field_auth.CertificateValidationContext.trusted_ca&gt;` to enable
   *   verification.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.UpstreamTlsContext tls_context = 11;</code>
   */
  boolean hasTlsContext();
  /**
   * <pre>
   * The TLS configuration for connections to the upstream cluster. If no TLS
   * configuration is specified, TLS will not be used for new connections.
   * .. attention::
   *   Server certificate verification is not enabled by default. Configure
   *   :ref:`trusted_ca&lt;envoy_api_field_auth.CertificateValidationContext.trusted_ca&gt;` to enable
   *   verification.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.UpstreamTlsContext tls_context = 11;</code>
   */
  io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContext getTlsContext();
  /**
   * <pre>
   * The TLS configuration for connections to the upstream cluster. If no TLS
   * configuration is specified, TLS will not be used for new connections.
   * .. attention::
   *   Server certificate verification is not enabled by default. Configure
   *   :ref:`trusted_ca&lt;envoy_api_field_auth.CertificateValidationContext.trusted_ca&gt;` to enable
   *   verification.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.UpstreamTlsContext tls_context = 11;</code>
   */
  io.envoyproxy.envoy.api.v2.auth.UpstreamTlsContextOrBuilder getTlsContextOrBuilder();

  /**
   * <pre>
   * Additional options when handling HTTP requests. These options will be applicable to both
   * HTTP1 and HTTP2 requests.
   * </pre>
   *
   * <code>.envoy.api.v2.core.HttpProtocolOptions common_http_protocol_options = 29;</code>
   */
  boolean hasCommonHttpProtocolOptions();
  /**
   * <pre>
   * Additional options when handling HTTP requests. These options will be applicable to both
   * HTTP1 and HTTP2 requests.
   * </pre>
   *
   * <code>.envoy.api.v2.core.HttpProtocolOptions common_http_protocol_options = 29;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HttpProtocolOptions getCommonHttpProtocolOptions();
  /**
   * <pre>
   * Additional options when handling HTTP requests. These options will be applicable to both
   * HTTP1 and HTTP2 requests.
   * </pre>
   *
   * <code>.envoy.api.v2.core.HttpProtocolOptions common_http_protocol_options = 29;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HttpProtocolOptionsOrBuilder getCommonHttpProtocolOptionsOrBuilder();

  /**
   * <pre>
   * Additional options when handling HTTP1 requests.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Http1ProtocolOptions http_protocol_options = 13;</code>
   */
  boolean hasHttpProtocolOptions();
  /**
   * <pre>
   * Additional options when handling HTTP1 requests.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Http1ProtocolOptions http_protocol_options = 13;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Http1ProtocolOptions getHttpProtocolOptions();
  /**
   * <pre>
   * Additional options when handling HTTP1 requests.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Http1ProtocolOptions http_protocol_options = 13;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Http1ProtocolOptionsOrBuilder getHttpProtocolOptionsOrBuilder();

  /**
   * <pre>
   * Even if default HTTP2 protocol options are desired, this field must be
   * set so that Envoy will assume that the upstream supports HTTP/2 when
   * making new HTTP connection pool connections. Currently, Envoy only
   * supports prior knowledge for upstream connections. Even if TLS is used
   * with ALPN, `http2_protocol_options` must be specified. As an aside this allows HTTP/2
   * connections to happen over plain text.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 14;</code>
   */
  boolean hasHttp2ProtocolOptions();
  /**
   * <pre>
   * Even if default HTTP2 protocol options are desired, this field must be
   * set so that Envoy will assume that the upstream supports HTTP/2 when
   * making new HTTP connection pool connections. Currently, Envoy only
   * supports prior knowledge for upstream connections. Even if TLS is used
   * with ALPN, `http2_protocol_options` must be specified. As an aside this allows HTTP/2
   * connections to happen over plain text.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 14;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Http2ProtocolOptions getHttp2ProtocolOptions();
  /**
   * <pre>
   * Even if default HTTP2 protocol options are desired, this field must be
   * set so that Envoy will assume that the upstream supports HTTP/2 when
   * making new HTTP connection pool connections. Currently, Envoy only
   * supports prior knowledge for upstream connections. Even if TLS is used
   * with ALPN, `http2_protocol_options` must be specified. As an aside this allows HTTP/2
   * connections to happen over plain text.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 14;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Http2ProtocolOptionsOrBuilder getHttp2ProtocolOptionsOrBuilder();

  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; extension_protocol_options = 35 [deprecated = true];</code>
   */
  @java.lang.Deprecated int getExtensionProtocolOptionsCount();
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; extension_protocol_options = 35 [deprecated = true];</code>
   */
  @java.lang.Deprecated boolean containsExtensionProtocolOptions(
      java.lang.String key);
  /**
   * Use {@link #getExtensionProtocolOptionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Struct>
  getExtensionProtocolOptions();
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; extension_protocol_options = 35 [deprecated = true];</code>
   */
  @java.lang.Deprecated java.util.Map<java.lang.String, com.google.protobuf.Struct>
  getExtensionProtocolOptionsMap();
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; extension_protocol_options = 35 [deprecated = true];</code>
   */
  @java.lang.Deprecated 
  com.google.protobuf.Struct getExtensionProtocolOptionsOrDefault(
      java.lang.String key,
      com.google.protobuf.Struct defaultValue);
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; extension_protocol_options = 35 [deprecated = true];</code>
   */
  @java.lang.Deprecated 
  com.google.protobuf.Struct getExtensionProtocolOptionsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_extension_protocol_options = 36;</code>
   */
  int getTypedExtensionProtocolOptionsCount();
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_extension_protocol_options = 36;</code>
   */
  boolean containsTypedExtensionProtocolOptions(
      java.lang.String key);
  /**
   * Use {@link #getTypedExtensionProtocolOptionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getTypedExtensionProtocolOptions();
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_extension_protocol_options = 36;</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getTypedExtensionProtocolOptionsMap();
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_extension_protocol_options = 36;</code>
   */

  com.google.protobuf.Any getTypedExtensionProtocolOptionsOrDefault(
      java.lang.String key,
      com.google.protobuf.Any defaultValue);
  /**
   * <pre>
   * The extension_protocol_options field is used to provide extension-specific protocol options
   * for upstream connections. The key should match the extension filter name, such as
   * "envoy.filters.network.thrift_proxy". See the extension's documentation for details on
   * specific options.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_extension_protocol_options = 36;</code>
   */

  com.google.protobuf.Any getTypedExtensionProtocolOptionsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * If the DNS refresh rate is specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used as the cluster’s DNS refresh
   * rate. If this setting is not specified, the value defaults to 5000ms. For
   * cluster types other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>.google.protobuf.Duration dns_refresh_rate = 16 [(.validate.rules) = { ... }</code>
   */
  boolean hasDnsRefreshRate();
  /**
   * <pre>
   * If the DNS refresh rate is specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used as the cluster’s DNS refresh
   * rate. If this setting is not specified, the value defaults to 5000ms. For
   * cluster types other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>.google.protobuf.Duration dns_refresh_rate = 16 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.Duration getDnsRefreshRate();
  /**
   * <pre>
   * If the DNS refresh rate is specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used as the cluster’s DNS refresh
   * rate. If this setting is not specified, the value defaults to 5000ms. For
   * cluster types other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>.google.protobuf.Duration dns_refresh_rate = 16 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getDnsRefreshRateOrBuilder();

  /**
   * <pre>
   * The DNS IP address resolution policy. If this setting is not specified, the
   * value defaults to
   * :ref:`AUTO&lt;envoy_api_enum_value_Cluster.DnsLookupFamily.AUTO&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.DnsLookupFamily dns_lookup_family = 17 [(.validate.rules) = { ... }</code>
   */
  int getDnsLookupFamilyValue();
  /**
   * <pre>
   * The DNS IP address resolution policy. If this setting is not specified, the
   * value defaults to
   * :ref:`AUTO&lt;envoy_api_enum_value_Cluster.DnsLookupFamily.AUTO&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.DnsLookupFamily dns_lookup_family = 17 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.DnsLookupFamily getDnsLookupFamily();

  /**
   * <pre>
   * If DNS resolvers are specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used to specify the cluster’s dns resolvers.
   * If this setting is not specified, the value defaults to the default
   * resolver, which uses /etc/resolv.conf for configuration. For cluster types
   * other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address dns_resolvers = 18;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.Address> 
      getDnsResolversList();
  /**
   * <pre>
   * If DNS resolvers are specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used to specify the cluster’s dns resolvers.
   * If this setting is not specified, the value defaults to the default
   * resolver, which uses /etc/resolv.conf for configuration. For cluster types
   * other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address dns_resolvers = 18;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Address getDnsResolvers(int index);
  /**
   * <pre>
   * If DNS resolvers are specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used to specify the cluster’s dns resolvers.
   * If this setting is not specified, the value defaults to the default
   * resolver, which uses /etc/resolv.conf for configuration. For cluster types
   * other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address dns_resolvers = 18;</code>
   */
  int getDnsResolversCount();
  /**
   * <pre>
   * If DNS resolvers are specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used to specify the cluster’s dns resolvers.
   * If this setting is not specified, the value defaults to the default
   * resolver, which uses /etc/resolv.conf for configuration. For cluster types
   * other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address dns_resolvers = 18;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.AddressOrBuilder> 
      getDnsResolversOrBuilderList();
  /**
   * <pre>
   * If DNS resolvers are specified and the cluster type is either
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`,
   * or :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`,
   * this value is used to specify the cluster’s dns resolvers.
   * If this setting is not specified, the value defaults to the default
   * resolver, which uses /etc/resolv.conf for configuration. For cluster types
   * other than
   * :ref:`STRICT_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.STRICT_DNS&gt;`
   * and :ref:`LOGICAL_DNS&lt;envoy_api_enum_value_Cluster.DiscoveryType.LOGICAL_DNS&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.Address dns_resolvers = 18;</code>
   */
  io.envoyproxy.envoy.api.v2.core.AddressOrBuilder getDnsResolversOrBuilder(
      int index);

  /**
   * <pre>
   * If specified, outlier detection will be enabled for this upstream cluster.
   * Each of the configuration values can be overridden via
   * :ref:`runtime values &lt;config_cluster_manager_cluster_runtime_outlier_detection&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.cluster.OutlierDetection outlier_detection = 19;</code>
   */
  boolean hasOutlierDetection();
  /**
   * <pre>
   * If specified, outlier detection will be enabled for this upstream cluster.
   * Each of the configuration values can be overridden via
   * :ref:`runtime values &lt;config_cluster_manager_cluster_runtime_outlier_detection&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.cluster.OutlierDetection outlier_detection = 19;</code>
   */
  io.envoyproxy.envoy.api.v2.cluster.OutlierDetection getOutlierDetection();
  /**
   * <pre>
   * If specified, outlier detection will be enabled for this upstream cluster.
   * Each of the configuration values can be overridden via
   * :ref:`runtime values &lt;config_cluster_manager_cluster_runtime_outlier_detection&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.cluster.OutlierDetection outlier_detection = 19;</code>
   */
  io.envoyproxy.envoy.api.v2.cluster.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder();

  /**
   * <pre>
   * The interval for removing stale hosts from a cluster type
   * :ref:`ORIGINAL_DST&lt;envoy_api_enum_value_Cluster.DiscoveryType.ORIGINAL_DST&gt;`.
   * Hosts are considered stale if they have not been used
   * as upstream destinations during this interval. New hosts are added
   * to original destination clusters on demand as new connections are
   * redirected to Envoy, causing the number of hosts in the cluster to
   * grow over time. Hosts that are not stale (they are actively used as
   * destinations) are kept in the cluster, which allows connections to
   * them remain open, saving the latency that would otherwise be spent
   * on opening new connections. If this setting is not specified, the
   * value defaults to 5000ms. For cluster types other than
   * :ref:`ORIGINAL_DST&lt;envoy_api_enum_value_Cluster.DiscoveryType.ORIGINAL_DST&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>.google.protobuf.Duration cleanup_interval = 20 [(.validate.rules) = { ... }</code>
   */
  boolean hasCleanupInterval();
  /**
   * <pre>
   * The interval for removing stale hosts from a cluster type
   * :ref:`ORIGINAL_DST&lt;envoy_api_enum_value_Cluster.DiscoveryType.ORIGINAL_DST&gt;`.
   * Hosts are considered stale if they have not been used
   * as upstream destinations during this interval. New hosts are added
   * to original destination clusters on demand as new connections are
   * redirected to Envoy, causing the number of hosts in the cluster to
   * grow over time. Hosts that are not stale (they are actively used as
   * destinations) are kept in the cluster, which allows connections to
   * them remain open, saving the latency that would otherwise be spent
   * on opening new connections. If this setting is not specified, the
   * value defaults to 5000ms. For cluster types other than
   * :ref:`ORIGINAL_DST&lt;envoy_api_enum_value_Cluster.DiscoveryType.ORIGINAL_DST&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>.google.protobuf.Duration cleanup_interval = 20 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.Duration getCleanupInterval();
  /**
   * <pre>
   * The interval for removing stale hosts from a cluster type
   * :ref:`ORIGINAL_DST&lt;envoy_api_enum_value_Cluster.DiscoveryType.ORIGINAL_DST&gt;`.
   * Hosts are considered stale if they have not been used
   * as upstream destinations during this interval. New hosts are added
   * to original destination clusters on demand as new connections are
   * redirected to Envoy, causing the number of hosts in the cluster to
   * grow over time. Hosts that are not stale (they are actively used as
   * destinations) are kept in the cluster, which allows connections to
   * them remain open, saving the latency that would otherwise be spent
   * on opening new connections. If this setting is not specified, the
   * value defaults to 5000ms. For cluster types other than
   * :ref:`ORIGINAL_DST&lt;envoy_api_enum_value_Cluster.DiscoveryType.ORIGINAL_DST&gt;`
   * this setting is ignored.
   * </pre>
   *
   * <code>.google.protobuf.Duration cleanup_interval = 20 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getCleanupIntervalOrBuilder();

  /**
   * <pre>
   * Optional configuration used to bind newly established upstream connections.
   * This overrides any bind_config specified in the bootstrap proto.
   * If the address and port are empty, no bind will be performed.
   * </pre>
   *
   * <code>.envoy.api.v2.core.BindConfig upstream_bind_config = 21;</code>
   */
  boolean hasUpstreamBindConfig();
  /**
   * <pre>
   * Optional configuration used to bind newly established upstream connections.
   * This overrides any bind_config specified in the bootstrap proto.
   * If the address and port are empty, no bind will be performed.
   * </pre>
   *
   * <code>.envoy.api.v2.core.BindConfig upstream_bind_config = 21;</code>
   */
  io.envoyproxy.envoy.api.v2.core.BindConfig getUpstreamBindConfig();
  /**
   * <pre>
   * Optional configuration used to bind newly established upstream connections.
   * This overrides any bind_config specified in the bootstrap proto.
   * If the address and port are empty, no bind will be performed.
   * </pre>
   *
   * <code>.envoy.api.v2.core.BindConfig upstream_bind_config = 21;</code>
   */
  io.envoyproxy.envoy.api.v2.core.BindConfigOrBuilder getUpstreamBindConfigOrBuilder();

  /**
   * <pre>
   * Configuration for load balancing subsetting.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LbSubsetConfig lb_subset_config = 22;</code>
   */
  boolean hasLbSubsetConfig();
  /**
   * <pre>
   * Configuration for load balancing subsetting.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LbSubsetConfig lb_subset_config = 22;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.LbSubsetConfig getLbSubsetConfig();
  /**
   * <pre>
   * Configuration for load balancing subsetting.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LbSubsetConfig lb_subset_config = 22;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.LbSubsetConfigOrBuilder getLbSubsetConfigOrBuilder();

  /**
   * <pre>
   * Optional configuration for the Ring Hash load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.RingHashLbConfig ring_hash_lb_config = 23;</code>
   */
  boolean hasRingHashLbConfig();
  /**
   * <pre>
   * Optional configuration for the Ring Hash load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.RingHashLbConfig ring_hash_lb_config = 23;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.RingHashLbConfig getRingHashLbConfig();
  /**
   * <pre>
   * Optional configuration for the Ring Hash load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.RingHashLbConfig ring_hash_lb_config = 23;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.RingHashLbConfigOrBuilder getRingHashLbConfigOrBuilder();

  /**
   * <pre>
   * Optional configuration for the Original Destination load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.OriginalDstLbConfig original_dst_lb_config = 34;</code>
   */
  boolean hasOriginalDstLbConfig();
  /**
   * <pre>
   * Optional configuration for the Original Destination load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.OriginalDstLbConfig original_dst_lb_config = 34;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.OriginalDstLbConfig getOriginalDstLbConfig();
  /**
   * <pre>
   * Optional configuration for the Original Destination load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.OriginalDstLbConfig original_dst_lb_config = 34;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.OriginalDstLbConfigOrBuilder getOriginalDstLbConfigOrBuilder();

  /**
   * <pre>
   * Optional configuration for the LeastRequest load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LeastRequestLbConfig least_request_lb_config = 37;</code>
   */
  boolean hasLeastRequestLbConfig();
  /**
   * <pre>
   * Optional configuration for the LeastRequest load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LeastRequestLbConfig least_request_lb_config = 37;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.LeastRequestLbConfig getLeastRequestLbConfig();
  /**
   * <pre>
   * Optional configuration for the LeastRequest load balancing policy.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.LeastRequestLbConfig least_request_lb_config = 37;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.LeastRequestLbConfigOrBuilder getLeastRequestLbConfigOrBuilder();

  /**
   * <pre>
   * Common configuration for all load balancer implementations.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.CommonLbConfig common_lb_config = 27;</code>
   */
  boolean hasCommonLbConfig();
  /**
   * <pre>
   * Common configuration for all load balancer implementations.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.CommonLbConfig common_lb_config = 27;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.CommonLbConfig getCommonLbConfig();
  /**
   * <pre>
   * Common configuration for all load balancer implementations.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.CommonLbConfig common_lb_config = 27;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.CommonLbConfigOrBuilder getCommonLbConfigOrBuilder();

  /**
   * <pre>
   * Optional custom transport socket implementation to use for upstream connections.
   * </pre>
   *
   * <code>.envoy.api.v2.core.TransportSocket transport_socket = 24;</code>
   */
  boolean hasTransportSocket();
  /**
   * <pre>
   * Optional custom transport socket implementation to use for upstream connections.
   * </pre>
   *
   * <code>.envoy.api.v2.core.TransportSocket transport_socket = 24;</code>
   */
  io.envoyproxy.envoy.api.v2.core.TransportSocket getTransportSocket();
  /**
   * <pre>
   * Optional custom transport socket implementation to use for upstream connections.
   * </pre>
   *
   * <code>.envoy.api.v2.core.TransportSocket transport_socket = 24;</code>
   */
  io.envoyproxy.envoy.api.v2.core.TransportSocketOrBuilder getTransportSocketOrBuilder();

  /**
   * <pre>
   * The Metadata field can be used to provide additional information about the
   * cluster. It can be used for stats, logging, and varying filter behavior.
   * Fields should use reverse DNS notation to denote which entity within Envoy
   * will need the information. For instance, if the metadata is intended for
   * the Router filter, the filter name should be specified as *envoy.router*.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Metadata metadata = 25;</code>
   */
  boolean hasMetadata();
  /**
   * <pre>
   * The Metadata field can be used to provide additional information about the
   * cluster. It can be used for stats, logging, and varying filter behavior.
   * Fields should use reverse DNS notation to denote which entity within Envoy
   * will need the information. For instance, if the metadata is intended for
   * the Router filter, the filter name should be specified as *envoy.router*.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Metadata metadata = 25;</code>
   */
  io.envoyproxy.envoy.api.v2.core.Metadata getMetadata();
  /**
   * <pre>
   * The Metadata field can be used to provide additional information about the
   * cluster. It can be used for stats, logging, and varying filter behavior.
   * Fields should use reverse DNS notation to denote which entity within Envoy
   * will need the information. For instance, if the metadata is intended for
   * the Router filter, the filter name should be specified as *envoy.router*.
   * </pre>
   *
   * <code>.envoy.api.v2.core.Metadata metadata = 25;</code>
   */
  io.envoyproxy.envoy.api.v2.core.MetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * Determines how Envoy selects the protocol used to speak to upstream hosts.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.ClusterProtocolSelection protocol_selection = 26;</code>
   */
  int getProtocolSelectionValue();
  /**
   * <pre>
   * Determines how Envoy selects the protocol used to speak to upstream hosts.
   * </pre>
   *
   * <code>.envoy.api.v2.Cluster.ClusterProtocolSelection protocol_selection = 26;</code>
   */
  io.envoyproxy.envoy.api.v2.Cluster.ClusterProtocolSelection getProtocolSelection();

  /**
   * <pre>
   * Optional options for upstream connections.
   * </pre>
   *
   * <code>.envoy.api.v2.UpstreamConnectionOptions upstream_connection_options = 30;</code>
   */
  boolean hasUpstreamConnectionOptions();
  /**
   * <pre>
   * Optional options for upstream connections.
   * </pre>
   *
   * <code>.envoy.api.v2.UpstreamConnectionOptions upstream_connection_options = 30;</code>
   */
  io.envoyproxy.envoy.api.v2.UpstreamConnectionOptions getUpstreamConnectionOptions();
  /**
   * <pre>
   * Optional options for upstream connections.
   * </pre>
   *
   * <code>.envoy.api.v2.UpstreamConnectionOptions upstream_connection_options = 30;</code>
   */
  io.envoyproxy.envoy.api.v2.UpstreamConnectionOptionsOrBuilder getUpstreamConnectionOptionsOrBuilder();

  /**
   * <pre>
   * If an upstream host becomes unhealthy (as determined by the configured health checks
   * or outlier detection), immediately close all connections to the failed host.
   * .. note::
   *   This is currently only supported for connections created by tcp_proxy.
   * .. note::
   *   The current implementation of this feature closes all connections immediately when
   *   the unhealthy status is detected. If there are a large number of connections open
   *   to an upstream host that becomes unhealthy, Envoy may spend a substantial amount of
   *   time exclusively closing these connections, and not processing any other traffic.
   * </pre>
   *
   * <code>bool close_connections_on_host_health_failure = 31;</code>
   */
  boolean getCloseConnectionsOnHostHealthFailure();

  /**
   * <pre>
   * If this cluster uses EDS or STRICT_DNS to configure its hosts, immediately drain
   * connections from any hosts that are removed from service discovery.
   * This only affects behavior for hosts that are being actively health checked.
   * If this flag is not set to true, Envoy will wait until the hosts fail active health
   * checking before removing it from the cluster.
   * </pre>
   *
   * <code>bool drain_connections_on_host_removal = 32;</code>
   */
  boolean getDrainConnectionsOnHostRemoval();

  public io.envoyproxy.envoy.api.v2.Cluster.LbConfigCase getLbConfigCase();
}
